{"version":3,"sources":["countries.js","PieChart.js","TimeGraph.js","Counter.js","App.js","redux/reducers/data.js","redux/actions/actionTypes.js","redux/reducers/index.js","redux/index.js","registerServiceWorker.js","index.js"],"names":["countries","countriesFull","isoDictionary","i","length","allCountries","name","iso2","iso3","isoDictionaryAll","temp","countryData","instance","axios","create","baseURL","PieChart","state","selector","data","fetchCountriesDataSummary","a","get","response","setState","console","error","componentDidMount","getCountry","countriesObj","filter","country","includes","countryRegion","setUpChart","values","labels","key","push","handleOnClick","selected","plotData","this","buttons","map","className","onClick","type","textinfo","titlefont","size","bold","title","colorway","colormap","nshades","format","alpha","style","width","height","layout","font","color","showlegend","reverse","plot_bgcolor","paper_bgcolor","autosize","useResizeHandler","Component","TimeGraph","logarithmic","fetchCountriesData","dict","result","capitalizeFirstLetter","string","charAt","toUpperCase","slice","getCountries","formatDate","date","mm","substring","dd","parseInt","setupTicks","arr","delta","l","Math","floor","newArr","handleSwitch","plotDataY","plotDataX","iso","countryObj","confirmedArr","deathsArr","recoveredArr","timeArr","counter","dateArr","confirmed","deaths","recovered","scatterData","select","trace","x","y","logType","class","id","for","xaxis","nticks","yaxis","dictionary","instance1","loading","instance2","Counter","dataCountries","loading1","loading2","fetchData","response1","data1","response2","data2","sortCountries","items","countryName","Object","keys","sort","b","rows","sortedData","log","value","App","initialState","reducer","action","payload","rootReducer","combineReducers","dataState","dataReducer","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","catch","ReactDOM","render","document","getElementById","URL","process","origin","addEventListener","fetch","status","headers","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"wLAuCA,I,kJAvCMA,EAAY,CAChB,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,OAGIC,EAAgB,CACpB,UACA,SACA,UACA,QACA,OACA,SACA,UACA,QACA,UACA,OACA,QACA,eACA,QACA,UACA,MACA,SAGIC,EAAgB,GACbC,EAAI,EAAGA,EAAIH,EAAUI,OAAQD,IACpCD,EAAcF,EAAUG,IAAMF,EAAcE,GA2L9C,IAxLA,IAAME,EAAe,CACnB,CAAEC,KAAM,cAAeC,KAAM,KAAMC,KAAM,OACzC,CAAEF,KAAM,UAAWC,KAAM,KAAMC,KAAM,OACrC,CAAEF,KAAM,UAAWC,KAAM,KAAMC,KAAM,OACrC,CAAEF,KAAM,UAAWC,KAAM,KAAMC,KAAM,OACrC,CAAEF,KAAM,SAAUC,KAAM,KAAMC,KAAM,OACpC,CAAEF,KAAM,sBAAuBC,KAAM,KAAMC,KAAM,OACjD,CAAEF,KAAM,YAAaC,KAAM,KAAMC,KAAM,OACvC,CAAEF,KAAM,UAAWC,KAAM,KAAMC,KAAM,OACrC,CAAEF,KAAM,YAAaC,KAAM,KAAMC,KAAM,OACvC,CAAEF,KAAM,UAAWC,KAAM,KAAMC,KAAM,OACrC,CAAEF,KAAM,aAAcC,KAAM,KAAMC,KAAM,OACxC,CAAEF,KAAM,UAAWC,KAAM,KAAMC,KAAM,OACrC,CAAEF,KAAM,UAAWC,KAAM,KAAMC,KAAM,OACrC,CAAEF,KAAM,aAAcC,KAAM,KAAMC,KAAM,OACxC,CAAEF,KAAM,WAAYC,KAAM,KAAMC,KAAM,OACtC,CAAEF,KAAM,UAAWC,KAAM,KAAMC,KAAM,OACrC,CAAEF,KAAM,UAAWC,KAAM,KAAMC,KAAM,OACrC,CAAEF,KAAM,SAAUC,KAAM,KAAMC,KAAM,OACpC,CAAEF,KAAM,QAASC,KAAM,KAAMC,KAAM,OACnC,CAAEF,KAAM,SAAUC,KAAM,KAAMC,KAAM,OACpC,CAAEF,KAAM,UAAWC,KAAM,KAAMC,KAAM,OACrC,CAAEF,KAAM,yBAA0BC,KAAM,KAAMC,KAAM,OACpD,CAAEF,KAAM,WAAYC,KAAM,KAAMC,KAAM,OACtC,CAAEF,KAAM,SAAUC,KAAM,KAAMC,KAAM,OACpC,CAAEF,KAAM,SAAUC,KAAM,KAAMC,KAAM,OACpC,CAAEF,KAAM,WAAYC,KAAM,KAAMC,KAAM,OACtC,CAAEF,KAAM,eAAgBC,KAAM,KAAMC,KAAM,OAC1C,CAAEF,KAAM,SACR,CAAEA,KAAM,UAAWC,KAAM,KAAMC,KAAM,OACrC,CAAEF,KAAM,cACR,CAAEA,KAAM,WAAYC,KAAM,KAAMC,KAAM,OACtC,CAAEF,KAAM,WAAYC,KAAM,KAAMC,KAAM,OACtC,CAAEF,KAAM,SAAUC,KAAM,KAAMC,KAAM,OACpC,CAAEF,KAAM,2BAA4BC,KAAM,KAAMC,KAAM,OACtD,CAAEF,KAAM,OAAQC,KAAM,KAAMC,KAAM,OAClC,CAAEF,KAAM,QAASC,KAAM,KAAMC,KAAM,OACnC,CAAEF,KAAM,QAASC,KAAM,KAAMC,KAAM,OACnC,CAAEF,KAAM,WAAYC,KAAM,KAAMC,KAAM,OACtC,CAAEF,KAAM,uBACR,CAAEA,KAAM,oBACR,CAAEA,KAAM,aAAcC,KAAM,KAAMC,KAAM,OACxC,CAAEF,KAAM,iBACR,CAAEA,KAAM,UAAWC,KAAM,KAAMC,KAAM,OACrC,CAAEF,KAAM,OAAQC,KAAM,KAAMC,KAAM,OAClC,CAAEF,KAAM,SAAUC,KAAM,KAAMC,KAAM,OACpC,CAAEF,KAAM,UAAWC,KAAM,KAAMC,KAAM,OACrC,CAAEF,KAAM,UAAWC,KAAM,KAAMC,KAAM,OACrC,CAAEF,KAAM,oBACR,CAAEA,KAAM,WAAYC,KAAM,KAAMC,KAAM,OACtC,CAAEF,KAAM,WAAYC,KAAM,KAAMC,KAAM,OACtC,CAAEF,KAAM,qBAAsBC,KAAM,KAAMC,KAAM,OAChD,CAAEF,KAAM,UAAWC,KAAM,KAAMC,KAAM,OACrC,CAAEF,KAAM,QAASC,KAAM,KAAMC,KAAM,OACnC,CAAEF,KAAM,cAAeC,KAAM,KAAMC,KAAM,OACzC,CAAEF,KAAM,oBAAqBC,KAAM,KAAMC,KAAM,OAC/C,CAAEF,KAAM,UAAWC,KAAM,KAAMC,KAAM,OACrC,CAAEF,KAAM,UAAWC,KAAM,KAAMC,KAAM,OACrC,CAAEF,KAAM,YACR,CAAEA,KAAM,WAAYC,KAAM,KAAMC,KAAM,OACtC,CAAEF,KAAM,OAAQC,KAAM,KAAMC,KAAM,OAClC,CAAEF,KAAM,UAAWC,KAAM,KAAMC,KAAM,OACrC,CAAEF,KAAM,SAAUC,KAAM,KAAMC,KAAM,OACpC,CAAEF,KAAM,QAASC,KAAM,KAAMC,KAAM,OACnC,CAAEF,KAAM,SAAUC,KAAM,KAAMC,KAAM,OACpC,CAAEF,KAAM,UAAWC,KAAM,KAAMC,KAAM,OACrC,CAAEF,KAAM,UAAWC,KAAM,KAAMC,KAAM,OACrC,CAAEF,KAAM,QAASC,KAAM,KAAMC,KAAM,OACnC,CAAEF,KAAM,SAAUC,KAAM,KAAMC,KAAM,OACpC,CAAEF,KAAM,UAAWC,KAAM,KAAMC,KAAM,OACrC,CAAEF,KAAM,YAAaC,KAAM,KAAMC,KAAM,OACvC,CAAEF,KAAM,SAAUC,KAAM,KAAMC,KAAM,OACpC,CAAEF,KAAM,gBAAiBC,KAAM,KAAMC,KAAM,OAC3C,CAAEF,KAAM,SAAUC,KAAM,KAAMC,KAAM,OACpC,CAAEF,KAAM,QAASC,KAAM,KAAMC,KAAM,OACnC,CAAEF,KAAM,YACR,CAAEA,KAAM,WAAYC,KAAM,KAAMC,KAAM,OACtC,CAAEF,KAAM,UAAWC,KAAM,KAAMC,KAAM,OACrC,CAAEF,KAAM,UAAWC,KAAM,KAAMC,KAAM,OACrC,CAAEF,KAAM,QAASC,KAAM,KAAMC,KAAM,OACnC,CAAEF,KAAM,YAAaC,KAAM,KAAMC,KAAM,OACvC,CAAEF,KAAM,OAAQC,KAAM,KAAMC,KAAM,OAClC,CAAEF,KAAM,OAAQC,KAAM,KAAMC,KAAM,OAClC,CAAEF,KAAM,UAAWC,KAAM,KAAMC,KAAM,OACrC,CAAEF,KAAM,SAAUC,KAAM,KAAMC,KAAM,OACpC,CAAEF,KAAM,QAASC,KAAM,KAAMC,KAAM,OACnC,CAAEF,KAAM,UAAWC,KAAM,KAAMC,KAAM,OACrC,CAAEF,KAAM,QAASC,KAAM,KAAMC,KAAM,OACnC,CAAEF,KAAM,SAAUC,KAAM,KAAMC,KAAM,OACpC,CAAEF,KAAM,aAAcC,KAAM,KAAMC,KAAM,OACxC,CAAEF,KAAM,QAASC,KAAM,KAAMC,KAAM,OACnC,CAAEF,KAAM,eAAgBC,KAAM,KAAMC,KAAM,OAC1C,CAAEF,KAAM,SAAUC,KAAM,KAAMC,KAAM,OACpC,CAAEF,KAAM,SAAUC,KAAM,KAAMC,KAAM,OACpC,CAAEF,KAAM,aAAcC,KAAM,KAAMC,KAAM,OACxC,CAAEF,KAAM,OAAQC,KAAM,KAAMC,KAAM,OAClC,CAAEF,KAAM,SAAUC,KAAM,KAAMC,KAAM,OACpC,CAAEF,KAAM,UAAWC,KAAM,KAAMC,KAAM,OACrC,CAAEF,KAAM,UAAWC,KAAM,KAAMC,KAAM,OACrC,CAAEF,KAAM,QAASC,KAAM,KAAMC,KAAM,OACnC,CAAEF,KAAM,gBAAiBC,KAAM,KAAMC,KAAM,OAC3C,CAAEF,KAAM,YAAaC,KAAM,KAAMC,KAAM,OACvC,CAAEF,KAAM,aAAcC,KAAM,KAAMC,KAAM,OACxC,CAAEF,KAAM,cACR,CAAEA,KAAM,aAAcC,KAAM,KAAMC,KAAM,OACxC,CAAEF,KAAM,WAAYC,KAAM,KAAMC,KAAM,OACtC,CAAEF,KAAM,WAAYC,KAAM,KAAMC,KAAM,OACtC,CAAEF,KAAM,OAAQC,KAAM,KAAMC,KAAM,OAClC,CAAEF,KAAM,QAASC,KAAM,KAAMC,KAAM,OACnC,CAAEF,KAAM,aAAcC,KAAM,KAAMC,KAAM,OACxC,CAAEF,KAAM,YAAaC,KAAM,KAAMC,KAAM,OACvC,CAAEF,KAAM,SAAUC,KAAM,KAAMC,KAAM,OACpC,CAAEF,KAAM,UAAWC,KAAM,KAAMC,KAAM,OACrC,CAAEF,KAAM,SAAUC,KAAM,KAAMC,KAAM,OACpC,CAAEF,KAAM,WAAYC,KAAM,KAAMC,KAAM,OACtC,CAAEF,KAAM,aAAcC,KAAM,KAAMC,KAAM,OACxC,CAAEF,KAAM,UAAWC,KAAM,KAAMC,KAAM,OACrC,CAAEF,KAAM,aAAcC,KAAM,KAAMC,KAAM,OACxC,CAAEF,KAAM,UAAWC,KAAM,KAAMC,KAAM,OACrC,CAAEF,KAAM,QAASC,KAAM,KAAMC,KAAM,OACnC,CAAEF,KAAM,cAAeC,KAAM,KAAMC,KAAM,OACzC,CAAEF,KAAM,cAAeC,KAAM,KAAMC,KAAM,OACzC,CAAEF,KAAM,YAAaC,KAAM,KAAMC,KAAM,OACvC,CAAEF,KAAM,QAASC,KAAM,KAAMC,KAAM,OACnC,CAAEF,KAAM,UAAWC,KAAM,KAAMC,KAAM,OACrC,CAAEF,KAAM,mBACR,CAAEA,KAAM,SAAUC,KAAM,KAAMC,KAAM,OACpC,CAAEF,KAAM,OAAQC,KAAM,KAAMC,KAAM,OAClC,CAAEF,KAAM,WAAYC,KAAM,KAAMC,KAAM,OACtC,CAAEF,KAAM,SAAUC,KAAM,KAAMC,KAAM,OACpC,CAAEF,KAAM,mBAAoBC,KAAM,KAAMC,KAAM,OAC9C,CAAEF,KAAM,WAAYC,KAAM,KAAMC,KAAM,OACtC,CAAEF,KAAM,OAAQC,KAAM,KAAMC,KAAM,OAClC,CAAEF,KAAM,cAAeC,KAAM,KAAMC,KAAM,OACzC,CAAEF,KAAM,SAAUC,KAAM,KAAMC,KAAM,OACpC,CAAEF,KAAM,WAAYC,KAAM,KAAMC,KAAM,OACtC,CAAEF,KAAM,QAASC,KAAM,KAAMC,KAAM,OACnC,CAAEF,KAAM,UAAWC,KAAM,KAAMC,KAAM,OACrC,CAAEF,KAAM,SAAUC,KAAM,KAAMC,KAAM,OACpC,CAAEF,KAAM,SAAUC,KAAM,KAAMC,KAAM,OACpC,CAAEF,KAAM,wBAAyBC,KAAM,KAAMC,KAAM,OACnD,CAAEF,KAAM,cAAeC,KAAM,KAAMC,KAAM,OACzC,CAAEF,KAAM,mCAAoCC,KAAM,KAAMC,KAAM,OAC9D,CAAEF,KAAM,aAAcC,KAAM,KAAMC,KAAM,OACxC,CAAEF,KAAM,eAAgBC,KAAM,KAAMC,KAAM,OAC1C,CAAEF,KAAM,UAAWC,KAAM,KAAMC,KAAM,OACrC,CAAEF,KAAM,SAAUC,KAAM,KAAMC,KAAM,OACpC,CAAEF,KAAM,aAAcC,KAAM,KAAMC,KAAM,OACxC,CAAEF,KAAM,eAAgBC,KAAM,KAAMC,KAAM,OAC1C,CAAEF,KAAM,YAAaC,KAAM,KAAMC,KAAM,OACvC,CAAEF,KAAM,WAAYC,KAAM,KAAMC,KAAM,OACtC,CAAEF,KAAM,WAAYC,KAAM,KAAMC,KAAM,OACtC,CAAEF,KAAM,UAAWC,KAAM,KAAMC,KAAM,OACrC,CAAEF,KAAM,eAAgBC,KAAM,KAAMC,KAAM,OAC1C,CAAEF,KAAM,QAASC,KAAM,KAAMC,KAAM,OACnC,CAAEF,KAAM,YAAaC,KAAM,KAAMC,KAAM,OACvC,CAAEF,KAAM,QAASC,KAAM,KAAMC,KAAM,OACnC,CAAEF,KAAM,WAAYC,KAAM,KAAMC,KAAM,OACtC,CAAEF,KAAM,SAAUC,KAAM,KAAMC,KAAM,OACpC,CAAEF,KAAM,cAAeC,KAAM,KAAMC,KAAM,OACzC,CAAEF,KAAM,QAASC,KAAM,KAAMC,KAAM,OACnC,CAAEF,KAAM,UAAWC,KAAM,KAAMC,KAAM,OACrC,CAAEF,KAAM,WAAYC,KAAM,KAAMC,KAAM,OACtC,CAAEF,KAAM,WAAYC,KAAM,KAAMC,KAAM,OACtC,CAAEF,KAAM,eACR,CAAEA,KAAM,OAAQC,KAAM,KAAMC,KAAM,OAClC,CAAEF,KAAM,sBAAuBC,KAAM,KAAMC,KAAM,OACjD,CAAEF,KAAM,UAAWC,KAAM,KAAMC,KAAM,OACrC,CAAEF,KAAM,SAAUC,KAAM,KAAMC,KAAM,OACpC,CAAEF,KAAM,KAAMC,KAAM,KAAMC,KAAM,OAChC,CAAEF,KAAM,SAAUC,KAAM,KAAMC,KAAM,OACpC,CAAEF,KAAM,UAAWC,KAAM,KAAMC,KAAM,OACrC,CAAEF,KAAM,uBAAwBC,KAAM,KAAMC,KAAM,OAClD,CAAEF,KAAM,iBAAkBC,KAAM,KAAMC,KAAM,OAC5C,CAAEF,KAAM,UAAWC,KAAM,KAAMC,KAAM,OACrC,CAAEF,KAAM,aAAcC,KAAM,KAAMC,KAAM,OACxC,CAAEF,KAAM,YAAaC,KAAM,KAAMC,KAAM,OACvC,CAAEF,KAAM,UAAWC,KAAM,KAAMC,KAAM,OACrC,CAAEF,KAAM,sBACR,CAAEA,KAAM,SAAUC,KAAM,KAAMC,KAAM,OACpC,CAAEF,KAAM,WAAYC,KAAM,KAAMC,KAAM,QAGpCC,EAAmB,GACdN,EAAI,EAAGA,EAAIE,EAAaD,OAAQD,IAAK,CAC5C,IAAIO,EAAOL,EAAaF,GACxBM,EAAiBC,EAAI,MAAYA,EAAI,KAGvC,IAQeC,EARK,CAClBX,EACAC,EACAC,EACAG,EACAI,GCvOIG,EAAWC,IAAMC,OAAO,CAC5BC,QAAS,6CAELf,EAAYW,EAAY,GAiHfK,E,4MA9GbC,MAAQ,CACNC,SAAU,YACVC,KAAM,M,EAGRC,0B,sBAA4B,8BAAAC,EAAA,+EAEHT,EAASU,IAAT,IAFG,OAEpBC,EAFoB,OAGpBJ,EAAOI,EAASJ,KACpB,EAAKK,SAAS,CAAEL,KAAMA,IAJE,gDAMxBM,QAAQC,MAAR,MANwB,yD,EAU5BC,kB,sBAAoB,sBAAAN,EAAA,sDAClB,EAAKD,4BADa,2C,EAIpBQ,WAAa,WACX,IAAMC,EAAe,EAAKZ,MAAME,KAChC,GAAIU,EAIF,OAHeA,EAAaC,QAAO,SAAAC,GAAO,OACxC/B,EAAUgC,SAASD,EAAQE,mB,EAMjCC,WAAa,SAACL,EAAcX,GAC1B,IAAIiB,EAAS,GACTC,EAAS,GACb,IAAK,IAAIC,KAAOR,EACdM,EAAOG,KAAKT,EAAaQ,GAAKnB,IAC9BkB,EAAOE,KAAKT,EAAaQ,GAAb,eAEd,MAAO,CAACF,EAAQC,I,EAGlBG,cAAgB,SAAAC,GACd,EAAKhB,SAAS,CAAEN,SAAUsB,K,uDAGlB,IAAD,OACDC,EAAWC,KAAKR,WAAWQ,KAAKd,aAAcc,KAAKzB,MAAMC,UAIzDyB,EAFY,CAAC,YAAa,SAAU,aAEhBC,KAAI,SAAA1B,GAAQ,OACpC,4BACE2B,UACE,EAAK5B,MAAMC,WAAaA,EACpB,+BACA,wBAEN4B,QAAS,kBAAM,EAAKP,cAAcrB,KAEjCA,MAICC,EAAO,CACX,CACEgB,OAAQM,EAAS,GACjBL,OAAQK,EAAS,GACjBM,KAAM,MACNC,SAAU,cACVC,UAAW,CACTC,KAAM,GACNC,MAAM,GAERC,MAC0B,cAAxBV,KAAKzB,MAAMC,SACP,kBACwB,WAAxBwB,KAAKzB,MAAMC,SACX,eACA,qBAGJmC,EAAWC,IAAS,CACxBA,SAAU,MACVC,QAASvD,EAAUI,OACnBoD,OAAQ,MACRC,MAAO,IAGT,OACE,yBAAKC,MAAO,CAAEC,MAAO,OAAQC,OAAQ,SACnC,6BACCjB,EACD,6BACA,kBAAC,IAAD,CACExB,KAAMA,EACN0C,OAAQ,CACNC,KAAM,CAAEC,MAAO,QAASb,KAAM,IAC9Bc,YAAY,EAEZX,SAAUA,EAASY,UACnBC,aAAc,UACdC,cAAe,UACfC,UAAU,GAEZC,kBAAkB,EAClBX,MAAO,CAAEC,MAAO,OAAQC,OAAQ,e,GAxGnBU,aCLjBtE,EAAYW,EAAY,GACxBV,EAAgBU,EAAY,GAE5BC,EAAWC,IAAMC,OAAO,CAC5BC,QAAS,kCA0MIwD,E,4MAtMbtD,MAAQ,CACNE,KAAM,KACND,SAAU,YACVsD,aAAa,G,EAGfC,mB,uCAAqB,WAAMzE,GAAN,qBAAAqB,EAAA,+DAEbqD,EAAO,GACFvE,EAAI,EAHI,YAGDA,EAAIH,EAAUI,QAHb,iCAIMQ,EAASU,IAAT,kBAAwBtB,EAAUG,KAJxC,OAIXoB,EAJW,OAKXZ,EAAcY,EAASJ,KAAKwD,OAChCD,EAAK1E,EAAUG,IAAMQ,EANN,OAGqBR,IAHrB,uBAQjB,EAAKqB,SAAS,CAAEL,KAAMuD,IARL,kDAUjBjD,QAAQC,MAAR,MAViB,0D,wDAcrBkD,sBAAwB,SAAAC,GACtB,OAAOA,EAAOC,OAAO,GAAGC,cAAgBF,EAAOG,MAAM,I,EAGvDrD,kB,sBAAoB,sBAAAN,EAAA,sDAClB,EAAKoD,mBAAmBzE,GADN,2C,EAIpBiF,aAAe,WACb,IAAMpD,EAAe,EAAKZ,MAAME,KAChC,GAAIU,EACF,OAAOA,G,EAIXqD,WAAa,SAAAC,GACX,GAAY,GAARA,EACF,OAAO,EAET,IAeMC,EAAKD,EAAKE,UAAU,EAAG,GACvBC,EAAKH,EAAKE,UAAU,EAAG,IAC7B,MAjBmB,CACjB,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,OAKgBE,SAASH,GAAM,GAAK,IAAME,G,EAG9CE,WAAa,SAACC,EAAKC,EAAOP,GACxB,IAAMQ,EAAIF,EAAIrF,OACdsF,EAAQE,KAAKC,MAAMF,EAAID,GAEvB,IADA,IAAII,EAAS,GACJ3F,EAAI,EAAGA,EAAIsF,EAAIrF,OAAQD,GAAQuF,EAClCP,EACFW,EAAOxD,KAAK,EAAK4C,WAAWO,EAAItF,KAEhC2F,EAAOxD,KAAKmD,EAAItF,IAGpB,OAAO2F,G,EAGTvD,cAAgB,SAAAC,GACd,EAAKhB,SAAS,CAAEN,SAAUsB,K,EAE5BuD,aAAe,WACb,EAAKvE,SAAS,CAAEgD,aAAc,EAAKvD,MAAMuD,e,uDAGjC,IAAD,OAGD7B,EAFY,CAAC,YAAa,SAAU,aAEhBC,KAAI,SAAA1B,GAAQ,OACpC,4BACE2B,UACE,EAAK5B,MAAMC,WAAaA,EACpB,+BACA,wBAEN4B,QAAS,kBAAM,EAAKP,cAAcrB,KAEjCA,MAICC,EAAOuB,KAAKuC,eACde,EAAY,CAAC,CAAC,IAAK,CAAC,IAAK,CAAC,KAC5BC,EAAY,GACd,IAAK,IAAIC,KAAO/E,EAAM,CACpB,IAAIgF,EAAahF,EAAK+E,GAClBE,EAAe,GACjBC,EAAY,GACZC,EAAe,GACfC,EAAU,GACVC,EAAU,EACVC,EAAU,GACZ,IAAK,IAAItB,KAAQgB,EAAY,CAC3B,IAAIO,EAAYP,EAAWhB,GAAMuB,UAC7BC,EAASR,EAAWhB,GAAMwB,OAC1BC,EAAYT,EAAWhB,GAAMyB,UACjCR,EAAa9D,KAAKoE,GAClBL,EAAU/D,KAAKqE,GACfL,EAAahE,KAAKsE,GAClBL,EAAQjE,KAAKkE,GACbC,EAAQnE,KAAK6C,GACbqB,IAEFP,EAAU3D,KAAKiE,GACfP,EAAU,GAAG1D,KAAK8D,GAClBJ,EAAU,GAAG1D,KAAK+D,GAClBL,EAAU,GAAG1D,KAAKgE,GAUpB,IAPA,IAAIO,EAAc,GACdC,EACsB,cAAxBpE,KAAKzB,MAAMC,SACP,EACwB,WAAxBwB,KAAKzB,MAAMC,SACX,EACA,EACGf,EAAI,EAAGA,EAAI8F,EAAU7F,OAAS,EAAGD,IAAK,CAC7C,IAAI4G,EAAQ,CACVC,EAAGP,EACHQ,EAAGjB,EAAUc,GAAQ3G,GACrB4C,KAAM,UACNzC,KAAML,EAAcE,EAAI,IAE1B0G,EAAYvE,KAAKyE,GAUnB,IAAIG,EAAUxE,KAAKzB,MAAMuD,YAAc,MAAQ,OACzCnB,EAAWC,IAAS,CACxBA,SAAU,MACVC,QAASvD,EAAUI,OACnBoD,OAAQ,MACRC,MAAO,IAGT,OACE,yBAAKC,MAAO,CAAEC,MAAO,OAAQC,OAAQ,SACnC,6BACCjB,EACD,yBAAKwE,MAAM,gCACT,2BACEpE,KAAK,WACLoE,MAAM,uBACNrE,QAAS,kBAAM,EAAKiD,gBACpBqB,GAAG,WAEL,6BACA,6BACA,2BAAOD,MAAM,uBAAuBE,IAAI,UAAxC,gBAIF,6BACE,kBAAC,IAAD,CACElG,KAAM0F,EACNhD,OAAQ,CACNT,MAAM,SAAD,OAAWV,KAAKkC,sBAAsBlC,KAAKzB,MAAMC,WACtD4C,KAAM,CAAEC,MAAO,QAASb,KAAM,IAC9BoE,MAAO,CACLlE,MAAO,OACPmE,OAAQ,IAEVC,MAAO,CAAEpE,MAAO,SAAUL,KAAMmE,GAChC7D,SAAUA,EACVa,aAAc,UACdC,cAAe,UACfC,UAAU,GAEZC,kBAAkB,EAClBX,MAAO,CAAEC,MAAO,OAAQC,OAAQ,gB,GA/LpBU,aCRlBmD,EAAa9G,EAAY,GAEzB+G,EAAY7G,IAAMC,OAAO,CAC7BC,QAAS,kCACT4G,SAAS,IAGLC,EAAY/G,IAAMC,OAAO,CAC7BC,QAAS,6CACT4G,SAAS,IAkGIE,E,4MA9Fb5G,MAAQ,CACNE,KAAM,KACN2G,cAAe,KACfC,UAAU,EACVC,UAAU,G,EAGZC,U,sBAAY,kCAAA5G,EAAA,+EAEcqG,EAAUpG,IAAV,IAFd,cAEJ4G,EAFI,OAGJC,EAAQD,EAAU/G,KAHd,SAIcyG,EAAUtG,IAAV,IAJd,OAIJ8G,EAJI,OAKJC,EAAQD,EAAUjH,KAEtB,EAAKK,SAAS,CAAEL,KAAMgH,EAAOL,cAAeO,EAAON,UAAU,IAPrD,kDASRtG,QAAQC,MAAR,MATQ,0D,EAaZC,kB,sBAAoB,sBAAAN,EAAA,sDAClB,EAAK4G,YADa,2C,EAIpBK,cAAgB,SAAAC,GAad,MAAO,CAZOA,EAAM3F,KAAI,SAAAb,GACtB,IAAIyG,EAAcC,OAAOC,KAAK3G,GAAS,GACvC,MAAO,CACLzB,KAAMmH,EAAWe,GACjB9B,UAAW3E,EAAQyG,GAAa9B,cAKViC,MAAK,SAACtH,EAAGuH,GAAJ,OAAUA,EAAElC,UAAYrF,EAAEqF,e,uDAOzD,IAAImC,EAAO,qCACX,IAAKnG,KAAKzB,MAAM8G,SAAU,CACxB,IAAMe,EAAapG,KAAK4F,cAAc5F,KAAKzB,MAAM6G,cAAcnD,QAC/DlD,QAAQsH,IAAID,GAGZD,EAFsBC,EAAW,GAEZlG,KAAI,SAAAb,GAAO,OAC9B,4BACE,2CAEE,0BAAM2B,MAAO,CAAEK,MAAO,QAAUhC,EAAQ2E,WAF1C,WAGe3E,EAAQzB,UAqB7B,OACE,yBAAKuC,UAAU,aACb,yBAAKA,UAAU,wBACb,yCACY,8BAEZ,wBAAIA,UAAU,YAAYa,MAAO,CAAEK,MAAO,QACvCrB,KAAKzB,MAAM8G,SAAW,GAAKrF,KAAKzB,MAAME,KAAKuF,UAAUsC,QAG1D,yBAAKnG,UAAU,iDACb,2BAAOsE,MAAM,eACX,+BAAQzE,KAAKzB,MAAM8G,SAAW,GAAKc,KAGvC,kC,GAzFcvE,aCFP2E,G,YARH,kBACV,yBAAKpG,UAAU,OACb,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,S,uBCTEqG,EAAe,CAAEvI,YAAa,MAcrBwI,EAZC,WAAmC,IAAlClI,EAAiC,uDAAzBiI,EAAcE,EAAW,uCAChD,OAAQA,EAAOrG,MACb,ICLuB,cDMrB,OAAO,eACF9B,EADL,CAEEN,YAAayI,EAAOC,UAExB,QACE,OAAOpI,IELEqI,EAJKC,YAAgB,CAClCC,UAAWC,ICGPC,EAAmBC,OAAOC,sCAAwCC,IAOzDC,EALDC,YACZT,EACAI,EAAiBM,YAAgBC,OCD7BC,EAAcC,QACW,cAA7BR,OAAOS,SAASC,UAEe,UAA7BV,OAAOS,SAASC,UAEhBV,OAAOS,SAASC,SAASC,MACvB,2DAsCN,SAASC,EAAgBC,GACvBC,UAAUC,cACPC,SAASH,GACTI,MAAK,SAAAC,GACJA,EAAaC,cAAgB,WAC3B,IAAMC,EAAmBF,EAAaG,WACtCD,EAAiBE,cAAgB,WACA,cAA3BF,EAAiB9J,QACfwJ,UAAUC,cAAcQ,WAK1BzJ,QAAQsH,IAAI,6CAKZtH,QAAQsH,IAAI,4CAMrBoC,OAAM,SAAAzJ,GACLD,QAAQC,MAAM,4CAA6CA,MCvEjE0J,IAASC,OACP,kBAAC,IAAD,CAAUvB,MAAOA,GACf,kBAAC,EAAD,OAEFwB,SAASC,eAAe,SDQX,WACb,GAA6C,kBAAmBd,UAAW,CAGzE,GADkB,IAAIe,IAAIC,WAAwB9B,OAAOS,UAC3CsB,SAAW/B,OAAOS,SAASsB,OAIvC,OAGF/B,OAAOgC,iBAAiB,QAAQ,WAC9B,IAAMnB,EAAK,UAAMiB,WAAN,sBAEPvB,IAiDV,SAAiCM,GAE/BoB,MAAMpB,GACHI,MAAK,SAAArJ,GAGkB,MAApBA,EAASsK,SACuD,IAAhEtK,EAASuK,QAAQxK,IAAI,gBAAgByK,QAAQ,cAG7CtB,UAAUC,cAAcsB,MAAMpB,MAAK,SAAAC,GACjCA,EAAaoB,aAAarB,MAAK,WAC7BjB,OAAOS,SAAS8B,eAKpB3B,EAAgBC,MAGnBW,OAAM,WACL1J,QAAQsH,IACN,oEArEAoD,CAAwB3B,GAIxBC,UAAUC,cAAcsB,MAAMpB,MAAK,WACjCnJ,QAAQsH,IACN,gHAMJwB,EAAgBC,OCjCxB4B,K","file":"static/js/main.6a8d2f23.chunk.js","sourcesContent":["const countries = [\n  \"DZA\",\n  \"KWT\",\n  \"BHR\",\n  \"EGY\",\n  \"IRQ\",\n  \"JOR\",\n  \"LBN\",\n  \"LBY\",\n  \"MAR\",\n  \"OMN\",\n  \"QAT\",\n  \"SAU\",\n  \"SYR\",\n  \"TUN\",\n  \"ARE\",\n  \"SDN\"\n];\n\nconst countriesFull = [\n  \"Algeria\",\n  \"Kuwait\",\n  \"Bahrain\",\n  \"Egypt\",\n  \"Iraq\",\n  \"Jordan\",\n  \"Lebanon\",\n  \"Libya\",\n  \"Morocco\",\n  \"Oman\",\n  \"Qatar\",\n  \"Saudi Arabia\",\n  \"Syria\",\n  \"Tunisia\",\n  \"UAE\",\n  \"Sudan\"\n];\n\nconst isoDictionary = {};\nfor (let i = 0; i < countries.length; i++) {\n  isoDictionary[countries[i]] = countriesFull[i];\n}\n\nconst allCountries = [\n  { name: \"Afghanistan\", iso2: \"AF\", iso3: \"AFG\" },\n  { name: \"Albania\", iso2: \"AL\", iso3: \"ALB\" },\n  { name: \"Algeria\", iso2: \"DZ\", iso3: \"DZA\" },\n  { name: \"Andorra\", iso2: \"AD\", iso3: \"AND\" },\n  { name: \"Angola\", iso2: \"AO\", iso3: \"AGO\" },\n  { name: \"Antigua and Barbuda\", iso2: \"AG\", iso3: \"ATG\" },\n  { name: \"Argentina\", iso2: \"AR\", iso3: \"ARG\" },\n  { name: \"Armenia\", iso2: \"AM\", iso3: \"ARM\" },\n  { name: \"Australia\", iso2: \"AU\", iso3: \"AUS\" },\n  { name: \"Austria\", iso2: \"AT\", iso3: \"AUT\" },\n  { name: \"Azerbaijan\", iso2: \"AZ\", iso3: \"AZE\" },\n  { name: \"Bahamas\", iso2: \"BS\", iso3: \"BHS\" },\n  { name: \"Bahrain\", iso2: \"BH\", iso3: \"BHR\" },\n  { name: \"Bangladesh\", iso2: \"BD\", iso3: \"BGD\" },\n  { name: \"Barbados\", iso2: \"BB\", iso3: \"BRB\" },\n  { name: \"Belarus\", iso2: \"BY\", iso3: \"BLR\" },\n  { name: \"Belgium\", iso2: \"BE\", iso3: \"BEL\" },\n  { name: \"Belize\", iso2: \"BZ\", iso3: \"BLZ\" },\n  { name: \"Benin\", iso2: \"BJ\", iso3: \"BEN\" },\n  { name: \"Bhutan\", iso2: \"BT\", iso3: \"BTN\" },\n  { name: \"Bolivia\", iso2: \"BO\", iso3: \"BOL\" },\n  { name: \"Bosnia and Herzegovina\", iso2: \"BA\", iso3: \"BIH\" },\n  { name: \"Botswana\", iso2: \"BW\", iso3: \"BWA\" },\n  { name: \"Brazil\", iso2: \"BR\", iso3: \"BRA\" },\n  { name: \"Brunei\", iso2: \"BN\", iso3: \"BRN\" },\n  { name: \"Bulgaria\", iso2: \"BG\", iso3: \"BGR\" },\n  { name: \"Burkina Faso\", iso2: \"BF\", iso3: \"BFA\" },\n  { name: \"Burma\" },\n  { name: \"Burundi\", iso2: \"BI\", iso3: \"BDI\" },\n  { name: \"Cabo Verde\" },\n  { name: \"Cambodia\", iso2: \"KH\", iso3: \"KHM\" },\n  { name: \"Cameroon\", iso2: \"CM\", iso3: \"CMR\" },\n  { name: \"Canada\", iso2: \"CA\", iso3: \"CAN\" },\n  { name: \"Central African Republic\", iso2: \"CF\", iso3: \"CAF\" },\n  { name: \"Chad\", iso2: \"TD\", iso3: \"TCD\" },\n  { name: \"Chile\", iso2: \"CL\", iso3: \"CHL\" },\n  { name: \"China\", iso2: \"CN\", iso3: \"CHN\" },\n  { name: \"Colombia\", iso2: \"CO\", iso3: \"COL\" },\n  { name: \"Congo (Brazzaville)\" },\n  { name: \"Congo (Kinshasa)\" },\n  { name: \"Costa Rica\", iso2: \"CR\", iso3: \"CRI\" },\n  { name: \"Cote d'Ivoire\" },\n  { name: \"Croatia\", iso2: \"HR\", iso3: \"HRV\" },\n  { name: \"Cuba\", iso2: \"CU\", iso3: \"CUB\" },\n  { name: \"Cyprus\", iso2: \"CY\", iso3: \"CYP\" },\n  { name: \"Czechia\", iso2: \"CZ\", iso3: \"CZE\" },\n  { name: \"Denmark\", iso2: \"DK\", iso3: \"DNK\" },\n  { name: \"Diamond Princess\" },\n  { name: \"Djibouti\", iso2: \"DJ\", iso3: \"DJI\" },\n  { name: \"Dominica\", iso2: \"DM\", iso3: \"DMA\" },\n  { name: \"Dominican Republic\", iso2: \"DO\", iso3: \"DOM\" },\n  { name: \"Ecuador\", iso2: \"EC\", iso3: \"ECU\" },\n  { name: \"Egypt\", iso2: \"EG\", iso3: \"EGY\" },\n  { name: \"El Salvador\", iso2: \"SV\", iso3: \"SLV\" },\n  { name: \"Equatorial Guinea\", iso2: \"GQ\", iso3: \"GNQ\" },\n  { name: \"Eritrea\", iso2: \"ER\", iso3: \"ERI\" },\n  { name: \"Estonia\", iso2: \"EE\", iso3: \"EST\" },\n  { name: \"Eswatini\" },\n  { name: \"Ethiopia\", iso2: \"ET\", iso3: \"ETH\" },\n  { name: \"Fiji\", iso2: \"FJ\", iso3: \"FJI\" },\n  { name: \"Finland\", iso2: \"FI\", iso3: \"FIN\" },\n  { name: \"France\", iso2: \"FR\", iso3: \"FRA\" },\n  { name: \"Gabon\", iso2: \"GA\", iso3: \"GAB\" },\n  { name: \"Gambia\", iso2: \"GM\", iso3: \"GMB\" },\n  { name: \"Georgia\", iso2: \"GE\", iso3: \"GEO\" },\n  { name: \"Germany\", iso2: \"DE\", iso3: \"DEU\" },\n  { name: \"Ghana\", iso2: \"GH\", iso3: \"GHA\" },\n  { name: \"Greece\", iso2: \"GR\", iso3: \"GRC\" },\n  { name: \"Grenada\", iso2: \"GD\", iso3: \"GRD\" },\n  { name: \"Guatemala\", iso2: \"GT\", iso3: \"GTM\" },\n  { name: \"Guinea\", iso2: \"GN\", iso3: \"GIN\" },\n  { name: \"Guinea-Bissau\", iso2: \"GW\", iso3: \"GNB\" },\n  { name: \"Guyana\", iso2: \"GY\", iso3: \"GUY\" },\n  { name: \"Haiti\", iso2: \"HT\", iso3: \"HTI\" },\n  { name: \"Holy See\" },\n  { name: \"Honduras\", iso2: \"HN\", iso3: \"HND\" },\n  { name: \"Hungary\", iso2: \"HU\", iso3: \"HUN\" },\n  { name: \"Iceland\", iso2: \"IS\", iso3: \"ISL\" },\n  { name: \"India\", iso2: \"IN\", iso3: \"IND\" },\n  { name: \"Indonesia\", iso2: \"ID\", iso3: \"IDN\" },\n  { name: \"Iran\", iso2: \"IR\", iso3: \"IRN\" },\n  { name: \"Iraq\", iso2: \"IQ\", iso3: \"IRQ\" },\n  { name: \"Ireland\", iso2: \"IE\", iso3: \"IRL\" },\n  { name: \"Israel\", iso2: \"IL\", iso3: \"ISR\" },\n  { name: \"Italy\", iso2: \"IT\", iso3: \"ITA\" },\n  { name: \"Jamaica\", iso2: \"JM\", iso3: \"JAM\" },\n  { name: \"Japan\", iso2: \"JP\", iso3: \"JPN\" },\n  { name: \"Jordan\", iso2: \"JO\", iso3: \"JOR\" },\n  { name: \"Kazakhstan\", iso2: \"KZ\", iso3: \"KAZ\" },\n  { name: \"Kenya\", iso2: \"KE\", iso3: \"KEN\" },\n  { name: \"Korea, South\", iso2: \"KR\", iso3: \"KOR\" },\n  { name: \"Kosovo\", iso2: \"XK\", iso3: \"XKX\" },\n  { name: \"Kuwait\", iso2: \"KW\", iso3: \"KWT\" },\n  { name: \"Kyrgyzstan\", iso2: \"KG\", iso3: \"KGZ\" },\n  { name: \"Laos\", iso2: \"LA\", iso3: \"LAO\" },\n  { name: \"Latvia\", iso2: \"LV\", iso3: \"LVA\" },\n  { name: \"Lebanon\", iso2: \"LB\", iso3: \"LBN\" },\n  { name: \"Liberia\", iso2: \"LR\", iso3: \"LBR\" },\n  { name: \"Libya\", iso2: \"LY\", iso3: \"LBY\" },\n  { name: \"Liechtenstein\", iso2: \"LI\", iso3: \"LIE\" },\n  { name: \"Lithuania\", iso2: \"LT\", iso3: \"LTU\" },\n  { name: \"Luxembourg\", iso2: \"LU\", iso3: \"LUX\" },\n  { name: \"MS Zaandam\" },\n  { name: \"Madagascar\", iso2: \"MG\", iso3: \"MDG\" },\n  { name: \"Malaysia\", iso2: \"MY\", iso3: \"MYS\" },\n  { name: \"Maldives\", iso2: \"MV\", iso3: \"MDV\" },\n  { name: \"Mali\", iso2: \"ML\", iso3: \"MLI\" },\n  { name: \"Malta\", iso2: \"MT\", iso3: \"MLT\" },\n  { name: \"Mauritania\", iso2: \"MR\", iso3: \"MRT\" },\n  { name: \"Mauritius\", iso2: \"MU\", iso3: \"MUS\" },\n  { name: \"Mexico\", iso2: \"MX\", iso3: \"MEX\" },\n  { name: \"Moldova\", iso2: \"MD\", iso3: \"MDA\" },\n  { name: \"Monaco\", iso2: \"MC\", iso3: \"MCO\" },\n  { name: \"Mongolia\", iso2: \"MN\", iso3: \"MNG\" },\n  { name: \"Montenegro\", iso2: \"ME\", iso3: \"MNE\" },\n  { name: \"Morocco\", iso2: \"MA\", iso3: \"MAR\" },\n  { name: \"Mozambique\", iso2: \"MZ\", iso3: \"MOZ\" },\n  { name: \"Namibia\", iso2: \"NA\", iso3: \"NAM\" },\n  { name: \"Nepal\", iso2: \"NP\", iso3: \"NPL\" },\n  { name: \"Netherlands\", iso2: \"NL\", iso3: \"NLD\" },\n  { name: \"New Zealand\", iso2: \"NZ\", iso3: \"NZL\" },\n  { name: \"Nicaragua\", iso2: \"NI\", iso3: \"NIC\" },\n  { name: \"Niger\", iso2: \"NE\", iso3: \"NER\" },\n  { name: \"Nigeria\", iso2: \"NG\", iso3: \"NGA\" },\n  { name: \"North Macedonia\" },\n  { name: \"Norway\", iso2: \"NO\", iso3: \"NOR\" },\n  { name: \"Oman\", iso2: \"OM\", iso3: \"OMN\" },\n  { name: \"Pakistan\", iso2: \"PK\", iso3: \"PAK\" },\n  { name: \"Panama\", iso2: \"PA\", iso3: \"PAN\" },\n  { name: \"Papua New Guinea\", iso2: \"PG\", iso3: \"PNG\" },\n  { name: \"Paraguay\", iso2: \"PY\", iso3: \"PRY\" },\n  { name: \"Peru\", iso2: \"PE\", iso3: \"PER\" },\n  { name: \"Philippines\", iso2: \"PH\", iso3: \"PHL\" },\n  { name: \"Poland\", iso2: \"PL\", iso3: \"POL\" },\n  { name: \"Portugal\", iso2: \"PT\", iso3: \"PRT\" },\n  { name: \"Qatar\", iso2: \"QA\", iso3: \"QAT\" },\n  { name: \"Romania\", iso2: \"RO\", iso3: \"ROU\" },\n  { name: \"Russia\", iso2: \"RU\", iso3: \"RUS\" },\n  { name: \"Rwanda\", iso2: \"RW\", iso3: \"RWA\" },\n  { name: \"Saint Kitts and Nevis\", iso2: \"KN\", iso3: \"KNA\" },\n  { name: \"Saint Lucia\", iso2: \"LC\", iso3: \"LCA\" },\n  { name: \"Saint Vincent and the Grenadines\", iso2: \"VC\", iso3: \"VCT\" },\n  { name: \"San Marino\", iso2: \"SM\", iso3: \"SMR\" },\n  { name: \"Saudi Arabia\", iso2: \"SA\", iso3: \"SAU\" },\n  { name: \"Senegal\", iso2: \"SN\", iso3: \"SEN\" },\n  { name: \"Serbia\", iso2: \"RS\", iso3: \"SRB\" },\n  { name: \"Seychelles\", iso2: \"SC\", iso3: \"SYC\" },\n  { name: \"Sierra Leone\", iso2: \"SL\", iso3: \"SLE\" },\n  { name: \"Singapore\", iso2: \"SG\", iso3: \"SGP\" },\n  { name: \"Slovakia\", iso2: \"SK\", iso3: \"SVK\" },\n  { name: \"Slovenia\", iso2: \"SI\", iso3: \"SVN\" },\n  { name: \"Somalia\", iso2: \"SO\", iso3: \"SOM\" },\n  { name: \"South Africa\", iso2: \"ZA\", iso3: \"ZAF\" },\n  { name: \"Spain\", iso2: \"ES\", iso3: \"ESP\" },\n  { name: \"Sri Lanka\", iso2: \"LK\", iso3: \"LKA\" },\n  { name: \"Sudan\", iso2: \"SD\", iso3: \"SDN\" },\n  { name: \"Suriname\", iso2: \"SR\", iso3: \"SUR\" },\n  { name: \"Sweden\", iso2: \"SE\", iso3: \"SWE\" },\n  { name: \"Switzerland\", iso2: \"CH\", iso3: \"CHE\" },\n  { name: \"Syria\", iso2: \"SY\", iso3: \"SYR\" },\n  { name: \"Taiwan*\", iso2: \"TW\", iso3: \"TWN\" },\n  { name: \"Tanzania\", iso2: \"TZ\", iso3: \"TZA\" },\n  { name: \"Thailand\", iso2: \"TH\", iso3: \"THA\" },\n  { name: \"Timor-Leste\" },\n  { name: \"Togo\", iso2: \"TG\", iso3: \"TGO\" },\n  { name: \"Trinidad and Tobago\", iso2: \"TT\", iso3: \"TTO\" },\n  { name: \"Tunisia\", iso2: \"TN\", iso3: \"TUN\" },\n  { name: \"Turkey\", iso2: \"TR\", iso3: \"TUR\" },\n  { name: \"US\", iso2: \"US\", iso3: \"USA\" },\n  { name: \"Uganda\", iso2: \"UG\", iso3: \"UGA\" },\n  { name: \"Ukraine\", iso2: \"UA\", iso3: \"UKR\" },\n  { name: \"United Arab Emirates\", iso2: \"AE\", iso3: \"ARE\" },\n  { name: \"United Kingdom\", iso2: \"GB\", iso3: \"GBR\" },\n  { name: \"Uruguay\", iso2: \"UY\", iso3: \"URY\" },\n  { name: \"Uzbekistan\", iso2: \"UZ\", iso3: \"UZB\" },\n  { name: \"Venezuela\", iso2: \"VE\", iso3: \"VEN\" },\n  { name: \"Vietnam\", iso2: \"VN\", iso3: \"VNM\" },\n  { name: \"West Bank and Gaza\" },\n  { name: \"Zambia\", iso2: \"ZM\", iso3: \"ZMB\" },\n  { name: \"Zimbabwe\", iso2: \"ZW\", iso3: \"ZWE\" }\n];\n\nlet isoDictionaryAll = {};\nfor (let i = 0; i < allCountries.length; i++) {\n  let temp = allCountries[i];\n  isoDictionaryAll[temp[\"iso3\"]] = temp[\"name\"];\n}\n\nconst countryData = [\n  countries,\n  countriesFull,\n  isoDictionary,\n  allCountries,\n  isoDictionaryAll\n];\n\nexport default countryData;\n","import React, { Component } from \"react\";\nimport Plot from \"react-plotly.js\";\nimport axios from \"axios\";\nimport colormap from \"colormap\";\nimport countryData from \"./countries\";\n\nconst instance = axios.create({\n  baseURL: \"https://covid19.mathdro.id/api/confirmed\"\n});\nconst countries = countryData[1];\n\nclass PieChart extends Component {\n  state = {\n    selector: \"confirmed\",\n    data: null\n  };\n\n  fetchCountriesDataSummary = async () => {\n    try {\n      let response = await instance.get(``);\n      let data = response.data;\n      this.setState({ data: data });\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  componentDidMount = async () => {\n    this.fetchCountriesDataSummary();\n  };\n\n  getCountry = () => {\n    const countriesObj = this.state.data;\n    if (countriesObj) {\n      const result = countriesObj.filter(country =>\n        countries.includes(country.countryRegion)\n      );\n      return result;\n    }\n  };\n\n  setUpChart = (countriesObj, selector) => {\n    let values = [];\n    let labels = [];\n    for (let key in countriesObj) {\n      values.push(countriesObj[key][selector]);\n      labels.push(countriesObj[key][\"countryRegion\"]);\n    }\n    return [values, labels];\n  };\n\n  handleOnClick = selected => {\n    this.setState({ selector: selected });\n  };\n\n  render() {\n    const plotData = this.setUpChart(this.getCountry(), this.state.selector);\n\n    const selectors = [\"confirmed\", \"deaths\", \"recovered\"];\n\n    const buttons = selectors.map(selector => (\n      <button\n        className={\n          this.state.selector === selector\n            ? \"btn btn-outline-light active\"\n            : \"btn btn-outline-light\"\n        }\n        onClick={() => this.handleOnClick(selector)}\n      >\n        {selector}\n      </button>\n    ));\n\n    const data = [\n      {\n        values: plotData[0],\n        labels: plotData[1],\n        type: \"pie\",\n        textinfo: \"label+value\",\n        titlefont: {\n          size: 24,\n          bold: true\n        },\n        title:\n          this.state.selector === \"confirmed\"\n            ? \"Total Confirmed\"\n            : this.state.selector === \"deaths\"\n            ? \"Total Deaths\"\n            : \"Total Recoveries\"\n      }\n    ];\n    const colorway = colormap({\n      colormap: \"jet\",\n      nshades: countries.length,\n      format: \"hex\",\n      alpha: 1\n    });\n\n    return (\n      <div style={{ width: \"100%\", height: \"100%\" }}>\n        <br></br>\n        {buttons}\n        <br />\n        <Plot\n          data={data}\n          layout={{\n            font: { color: \"white\", size: 14 },\n            showlegend: false,\n\n            colorway: colorway.reverse(),\n            plot_bgcolor: \"#161616\",\n            paper_bgcolor: \"#161616\",\n            autosize: true\n          }}\n          useResizeHandler={true}\n          style={{ width: \"100%\", height: \"100%\" }}\n        />\n      </div>\n    );\n  }\n}\n\nexport default PieChart;\n","import React, { Component } from \"react\";\nimport Plot from \"react-plotly.js\";\nimport axios from \"axios\";\nimport colormap from \"colormap\";\nimport countryData from \"./countries\";\n\nconst countries = countryData[0];\nconst countriesFull = countryData[1];\n\nconst instance = axios.create({\n  baseURL: \"https://covidapi.info/api/v1/\"\n});\n\nclass TimeGraph extends Component {\n  state = {\n    data: null,\n    selector: \"confirmed\",\n    logarithmic: false\n  };\n\n  fetchCountriesData = async countries => {\n    try {\n      let dict = {};\n      for (let i = 0; i < countries.length; i++) {\n        let response = await instance.get(`country/${countries[i]}`);\n        let countryData = response.data.result;\n        dict[countries[i]] = countryData;\n      }\n      this.setState({ data: dict });\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  capitalizeFirstLetter = string => {\n    return string.charAt(0).toUpperCase() + string.slice(1);\n  };\n\n  componentDidMount = async () => {\n    this.fetchCountriesData(countries);\n  };\n\n  getCountries = () => {\n    const countriesObj = this.state.data;\n    if (countriesObj) {\n      return countriesObj;\n    }\n  };\n\n  formatDate = date => {\n    if (date == 0) {\n      return 0;\n    }\n    const monthNames = [\n      \"Jan\",\n      \"Feb\",\n      \"Mar\",\n      \"Apr\",\n      \"May\",\n      \"Jun\",\n      \"Jul\",\n      \"Aug\",\n      \"Sep\",\n      \"Oct\",\n      \"Nov\",\n      \"Dec\"\n    ];\n\n    const mm = date.substring(5, 7);\n    const dd = date.substring(8, 11);\n    return monthNames[parseInt(mm) - 1] + \" \" + dd;\n  };\n\n  setupTicks = (arr, delta, date) => {\n    const l = arr.length;\n    delta = Math.floor(l / delta);\n    let newArr = [];\n    for (let i = 0; i < arr.length; i = i + delta) {\n      if (date) {\n        newArr.push(this.formatDate(arr[i]));\n      } else {\n        newArr.push(arr[i]);\n      }\n    }\n    return newArr;\n  };\n\n  handleOnClick = selected => {\n    this.setState({ selector: selected });\n  };\n  handleSwitch = () => {\n    this.setState({ logarithmic: !this.state.logarithmic });\n  };\n\n  render() {\n    const selectors = [\"confirmed\", \"deaths\", \"recovered\"];\n\n    const buttons = selectors.map(selector => (\n      <button\n        className={\n          this.state.selector === selector\n            ? \"btn btn-outline-light active\"\n            : \"btn btn-outline-light\"\n        }\n        onClick={() => this.handleOnClick(selector)}\n      >\n        {selector}\n      </button>\n    ));\n\n    const data = this.getCountries();\n    let plotDataY = [[[]], [[]], [[]]],\n      plotDataX = [];\n    for (let iso in data) {\n      let countryObj = data[iso];\n      var confirmedArr = [],\n        deathsArr = [],\n        recoveredArr = [],\n        timeArr = [],\n        counter = 0,\n        dateArr = [];\n      for (let date in countryObj) {\n        var confirmed = countryObj[date].confirmed;\n        var deaths = countryObj[date].deaths;\n        var recovered = countryObj[date].recovered;\n        confirmedArr.push(confirmed);\n        deathsArr.push(deaths);\n        recoveredArr.push(recovered);\n        timeArr.push(counter);\n        dateArr.push(date);\n        counter++;\n      }\n      plotDataX.push(timeArr);\n      plotDataY[0].push(confirmedArr);\n      plotDataY[1].push(deathsArr);\n      plotDataY[2].push(recoveredArr);\n    }\n\n    let scatterData = [];\n    let select =\n      this.state.selector === \"confirmed\"\n        ? 0\n        : this.state.selector === \"deaths\"\n        ? 1\n        : 2;\n    for (let i = 1; i < plotDataX.length + 1; i++) {\n      var trace = {\n        x: dateArr,\n        y: plotDataY[select][i],\n        type: \"scatter\",\n        name: countriesFull[i - 1]\n      };\n      scatterData.push(trace);\n    }\n    // console.log(\"test\");\n    // var tickvals = [0],\n    //   ticktxt = [0];\n    // if (plotDataX.length > 1 && dateArr.length > 1) {\n    //   tickvals = this.setupTicks(plotDataX[1], 25, false);\n    //   ticktxt = this.setupTicks(dateArr, 25, true);\n    // }\n\n    let logType = this.state.logarithmic ? \"log\" : \"null\";\n    const colorway = colormap({\n      colormap: \"jet\",\n      nshades: countries.length,\n      format: \"hex\",\n      alpha: 1\n    });\n\n    return (\n      <div style={{ width: \"100%\", height: \"100%\" }}>\n        <br></br>\n        {buttons}\n        <div class=\"custom-control custom-switch\">\n          <input\n            type=\"checkbox\"\n            class=\"custom-control-input\"\n            onClick={() => this.handleSwitch()}\n            id=\"switch\"\n          />\n          <br />\n          <br />\n          <label class=\"custom-control-label\" for=\"switch\">\n            Logarithmic\n          </label>\n        </div>\n        <div>\n          <Plot\n            data={scatterData}\n            layout={{\n              title: `Total ${this.capitalizeFirstLetter(this.state.selector)}`,\n              font: { color: \"white\", size: 12 },\n              xaxis: {\n                title: \"Date\",\n                nticks: 15\n              },\n              yaxis: { title: \"Number\", type: logType },\n              colorway: colorway,\n              plot_bgcolor: \"#161616\",\n              paper_bgcolor: \"#161616\",\n              autosize: true\n            }}\n            useResizeHandler={true}\n            style={{ width: \"100%\", height: \"100%\" }}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default TimeGraph;\n","import React, { Component } from \"react\";\nimport countryData from \"./countries\";\nimport axios from \"axios\";\n\nconst allCountries = countryData[3];\nconst dictionary = countryData[4];\n\nconst instance1 = axios.create({\n  baseURL: \"https://covid19.mathdro.id/api/\",\n  loading: true\n});\n\nconst instance2 = axios.create({\n  baseURL: \"https://covidapi.info/api/v1/global/latest\",\n  loading: true\n});\n\nclass Counter extends Component {\n  state = {\n    data: null,\n    dataCountries: null,\n    loading1: true,\n    loading2: true\n  };\n\n  fetchData = async () => {\n    try {\n      let response1 = await instance1.get(``);\n      let data1 = response1.data;\n      let response2 = await instance2.get(``);\n      let data2 = response2.data;\n\n      this.setState({ data: data1, dataCountries: data2, loading1: false });\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  componentDidMount = async () => {\n    this.fetchData();\n  };\n\n  sortCountries = items => {\n    let cleaned = items.map(country => {\n      let countryName = Object.keys(country)[0];\n      return {\n        name: dictionary[countryName],\n        confirmed: country[countryName].confirmed\n        //  deaths: country[countryName].deaths,\n        // recovered: country[countryName].recovered\n      };\n    });\n    const confirmed = cleaned.sort((a, b) => b.confirmed - a.confirmed);\n    // const deaths = cleaned.sort((a, b) => b.deaths - a.deaths);\n    // const recovered = cleaned.sort((a, b) => b.recovered - a.recovered);\n    return [confirmed]; //, deaths, recovered];\n  };\n\n  render() {\n    let rows = <></>;\n    if (!this.state.loading1) {\n      const sortedData = this.sortCountries(this.state.dataCountries.result);\n      console.log(sortedData);\n      const confirmedData = sortedData[0];\n\n      rows = confirmedData.map(country => (\n        <tr>\n          <td>\n            &nbsp;&nbsp;&nbsp;\n            <font style={{ color: \"red\" }}>{country.confirmed}</font>\n            &nbsp;&nbsp;{country.name}\n          </td>\n        </tr>\n      ));\n\n      //   rows = this.state.dataCountries.result.map(country => {\n      //     let countryName = Object.keys(country)[0];\n      //     return (\n      //       <tr>\n      //         <td>\n      //           &nbsp;&nbsp;&nbsp;\n      //           <font style={{ color: \"red\" }}>\n      //             {country[countryName].confirmed}\n      //           </font>\n      //           &nbsp;&nbsp;{countryName}\n      //         </td>\n      //       </tr>\n      //     );\n      //   });\n    }\n\n    return (\n      <div className=\"container\">\n        <div className=\"card mx-auto counter\">\n          <h4>\n            Confirmed <br></br>\n          </h4>\n          <h1 className=\"display-3\" style={{ color: \"red\" }}>\n            {this.state.loading1 ? \"\" : this.state.data.confirmed.value}\n          </h1>\n        </div>\n        <div className=\"card mx-auto counter list my-custom-scrollbar\">\n          <table class=\"table-dark \">\n            <tbody>{this.state.loading1 ? \"\" : rows}</tbody>\n          </table>\n        </div>\n        <br></br>\n      </div>\n    );\n  }\n}\n\nexport default Counter;\n","import React from \"react\";\nimport PieChart from \"./PieChart\";\nimport TimeGraph from \"./TimeGraph\";\nimport Counter from \"./Counter\";\nimport \"./App.css\";\nimport \"./index.css\";\n\nconst App = () => (\n  <div className=\"App\">\n    <PieChart />\n    <TimeGraph />\n    <Counter />\n  </div>\n);\n\nexport default App;\n","import { SET_COUNTRY } from \"../actions/actionTypes\";\n\nconst initialState = { countryData: null };\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case SET_COUNTRY:\n      return {\n        ...state,\n        countryData: action.payload\n      };\n    default:\n      return state;\n  }\n};\n\nexport default reducer;\n","export const SET_COUNTRY_DATA = \"SET_COUNTRY_DATA\";\nexport const SET_COUNTRY = \"SET_COUNTRY\";\n","import { combineReducers } from \"redux\";\nimport dataReducer from \"./data\";\n\nconst rootReducer = combineReducers({\n  dataState: dataReducer\n});\n\nexport default rootReducer;\n","import { createStore, compose, applyMiddleware } from \"redux\";\nimport thunk from \"redux-thunk\";\n\n// Data actions\n\nimport rootReducer from \"./reducers\";\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nconst store = createStore(\n  rootReducer,\n  composeEnhancers(applyMiddleware(thunk))\n);\n\nexport default store;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://goo.gl/SC7cgQ\"\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log(\"New content is available; please refresh.\");\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get(\"content-type\").indexOf(\"javascript\") === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport { Provider } from \"react-redux\";\nimport App from \"./App\";\nimport store from \"./redux\";\nimport registerServiceWorker from \"./registerServiceWorker\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\nregisterServiceWorker();\n"],"sourceRoot":""}