{"version":3,"sources":["countries.js","NavBar.js","Loading.js","PieChart.js","TimeGraph.js","Counter.js","redux/actions/data.js","redux/actions/actionTypes.js","CountryInfo.js","MapChart.js","App.js","Footer.js","redux/reducers/data.js","redux/reducers/index.js","redux/index.js","registerServiceWorker.js","index.js"],"names":["NavBar","id","class","role","aria-label","to","type","countries","countriesFull","isoDictionary","i","length","allCountries","name","iso2","iso3","isoDictionaryAll","temp","countryData","Loading","className","icon","faSpinner","spin","size","instance","axios","create","baseURL","PieChart","state","selector","data","loading","fetchCountriesDataSummary","a","get","response","setState","console","error","componentDidMount","getCountry","countriesObj","filter","country","includes","countryRegion","setUpChart","values","labels","key","push","handleOnClick","selected","plotData","this","buttons","map","onClick","textinfo","title","text","position","colorway","colormap","nshades","format","alpha","style","width","height","layout","modebar","bgcolor","font","color","showlegend","reverse","plot_bgcolor","paper_bgcolor","autosize","config","modeBarButtonsToRemove","displaylogo","useResizeHandler","Component","TimeGraph","logarithmic","fetchCountriesData","dict","result","capitalizeFirstLetter","string","charAt","toUpperCase","slice","getCountries","formatDate","date","mm","substring","dd","parseInt","setupTicks","arr","delta","l","Math","floor","newArr","handleSwitch","plotDataY","plotDataX","iso","countryObj","confirmedArr","deathsArr","recoveredArr","timeArr","counter","dateArr","confirmed","deaths","recovered","scatterData","select","trace","x","y","logType","for","xaxis","nticks","yaxis","hovermode","legend","bordercolor","borderwidth","MENA","dictionary","instance1","instance2","Counter","dataCountries","region","changeRegion","fetchData","response1","data1","response2","data2","sortCountriesConfirmed","items","countryName","Object","keys","sort","b","sortCountriesRecovered","sortCountriesDeaths","props","setData","confirmedRows","deadRows","recoveredRows","confirmedRowsMENA","deadRowsMENA","recoveredRowsMENA","sortedDataConfirmed","sortedDataDeaths","sortedDataRecovered","confirmedData","deathsData","recoveredData","fontSize","menaConfirmed","menaDeaths","menaRecovered","indexOf","Tabs","defaultActiveKey","Tab","eventKey","value","connect","dispatch","payload","CountryInfo","useState","setLoading","X","setX","Y1","setY1","Y2","setY2","Y3","setY3","Y4","setY4","setLogarithmic","useEffect","Xtemp","Y1temp","Y2temp","Y3temp","Y4temp","covidData","show","setShow","setCountry","fetchCountry","pointData","index","points","pointIndex","locations","countryNames","confirmedList","scaledData","num","pow","mode","hoverinfo","marker","sizeref","line","Modal","aria-labelledby","centered","onHide","Header","closeButton","Body","geo","scope","resolution","showland","landcolor","showframe","showcountries","showocean","oceancolor","handleShow","App","path","component","MapChart","initialState","reducer","action","rootReducer","combineReducers","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","log","catch","ReactDOM","render","document","getElementById","URL","process","origin","addEventListener","fetch","status","headers","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.e90b7642.chunk.js","sourcesContent":["const countries = [\n  \"DZA\",\n  \"KWT\",\n  \"BHR\",\n  \"EGY\",\n  \"IRQ\",\n  \"JOR\",\n  \"LBN\",\n  \"LBY\",\n  \"MAR\",\n  \"OMN\",\n  \"QAT\",\n  \"SAU\",\n  \"SYR\",\n  \"TUN\",\n  \"ARE\",\n  \"SDN\"\n];\n\nconst countriesFull = [\n  \"Algeria\",\n  \"Kuwait\",\n  \"Bahrain\",\n  \"Egypt\",\n  \"Iraq\",\n  \"Jordan\",\n  \"Lebanon\",\n  \"Libya\",\n  \"Morocco\",\n  \"Oman\",\n  \"Qatar\",\n  \"Saudi Arabia\",\n  \"Syria\",\n  \"Tunisia\",\n  \"UAE\",\n  \"Sudan\"\n];\n\nconst isoDictionary = {};\nfor (let i = 0; i < countries.length; i++) {\n  isoDictionary[countries[i]] = countriesFull[i];\n}\n\nconst allCountries = [\n  { name: \"Afghanistan\", iso2: \"AF\", iso3: \"AFG\" },\n  { name: \"Albania\", iso2: \"AL\", iso3: \"ALB\" },\n  { name: \"Algeria\", iso2: \"DZ\", iso3: \"DZA\" },\n  { name: \"Andorra\", iso2: \"AD\", iso3: \"AND\" },\n  { name: \"Angola\", iso2: \"AO\", iso3: \"AGO\" },\n  { name: \"Antigua and Barbuda\", iso2: \"AG\", iso3: \"ATG\" },\n  { name: \"Argentina\", iso2: \"AR\", iso3: \"ARG\" },\n  { name: \"Armenia\", iso2: \"AM\", iso3: \"ARM\" },\n  { name: \"Australia\", iso2: \"AU\", iso3: \"AUS\" },\n  { name: \"Austria\", iso2: \"AT\", iso3: \"AUT\" },\n  { name: \"Azerbaijan\", iso2: \"AZ\", iso3: \"AZE\" },\n  { name: \"Bahamas\", iso2: \"BS\", iso3: \"BHS\" },\n  { name: \"Bahrain\", iso2: \"BH\", iso3: \"BHR\" },\n  { name: \"Bangladesh\", iso2: \"BD\", iso3: \"BGD\" },\n  { name: \"Barbados\", iso2: \"BB\", iso3: \"BRB\" },\n  { name: \"Belarus\", iso2: \"BY\", iso3: \"BLR\" },\n  { name: \"Belgium\", iso2: \"BE\", iso3: \"BEL\" },\n  { name: \"Belize\", iso2: \"BZ\", iso3: \"BLZ\" },\n  { name: \"Benin\", iso2: \"BJ\", iso3: \"BEN\" },\n  { name: \"Bhutan\", iso2: \"BT\", iso3: \"BTN\" },\n  { name: \"Bolivia\", iso2: \"BO\", iso3: \"BOL\" },\n  { name: \"Bosnia and Herzegovina\", iso2: \"BA\", iso3: \"BIH\" },\n  { name: \"Botswana\", iso2: \"BW\", iso3: \"BWA\" },\n  { name: \"Brazil\", iso2: \"BR\", iso3: \"BRA\" },\n  { name: \"Brunei\", iso2: \"BN\", iso3: \"BRN\" },\n  { name: \"Bulgaria\", iso2: \"BG\", iso3: \"BGR\" },\n  { name: \"Burkina Faso\", iso2: \"BF\", iso3: \"BFA\" },\n  { name: \"Burma\" },\n  { name: \"Burundi\", iso2: \"BI\", iso3: \"BDI\" },\n  { name: \"Cabo Verde\" },\n  { name: \"Kosovo\", iso2: \"RK\", iso3: \"RKS\" },\n  { name: \"Cambodia\", iso2: \"KH\", iso3: \"KHM\" },\n  { name: \"Cameroon\", iso2: \"CM\", iso3: \"CMR\" },\n  { name: \"Canada\", iso2: \"CA\", iso3: \"CAN\" },\n  { name: \"Central African Republic\", iso2: \"CF\", iso3: \"CAF\" },\n  { name: \"Chad\", iso2: \"TD\", iso3: \"TCD\" },\n  { name: \"Chile\", iso2: \"CL\", iso3: \"CHL\" },\n  { name: \"China\", iso2: \"CN\", iso3: \"CHN\" },\n  { name: \"Colombia\", iso2: \"CO\", iso3: \"COL\" },\n  { name: \"Congo (Brazzaville)\" },\n  { name: \"Congo (Kinshasa)\" },\n  { name: \"Democratic Republic of the Congo\", iso2: \"CD\", iso3: \"COD\" },\n  { name: \"Costa Rica\", iso2: \"CR\", iso3: \"CRI\" },\n  { name: \"Cote d'Ivoire\" },\n  { name: \"Croatia\", iso2: \"HR\", iso3: \"HRV\" },\n  { name: \"Cuba\", iso2: \"CU\", iso3: \"CUB\" },\n  { name: \"Cyprus\", iso2: \"CY\", iso3: \"CYP\" },\n  { name: \"Czechia\", iso2: \"CZ\", iso3: \"CZE\" },\n  { name: \"Denmark\", iso2: \"DK\", iso3: \"DNK\" },\n  { name: \"Diamond Princess\" },\n  { name: \"Djibouti\", iso2: \"DJ\", iso3: \"DJI\" },\n  { name: \"Dominica\", iso2: \"DM\", iso3: \"DMA\" },\n  { name: \"Dominican Republic\", iso2: \"DO\", iso3: \"DOM\" },\n  { name: \"Ecuador\", iso2: \"EC\", iso3: \"ECU\" },\n  { name: \"Egypt\", iso2: \"EG\", iso3: \"EGY\" },\n  { name: \"El Salvador\", iso2: \"SV\", iso3: \"SLV\" },\n  { name: \"Equatorial Guinea\", iso2: \"GQ\", iso3: \"GNQ\" },\n  { name: \"Eritrea\", iso2: \"ER\", iso3: \"ERI\" },\n  { name: \"Estonia\", iso2: \"EE\", iso3: \"EST\" },\n  { name: \"Eswatini\" },\n  { name: \"Ethiopia\", iso2: \"ET\", iso3: \"ETH\" },\n  { name: \"Fiji\", iso2: \"FJ\", iso3: \"FJI\" },\n  { name: \"Finland\", iso2: \"FI\", iso3: \"FIN\" },\n  { name: \"France\", iso2: \"FR\", iso3: \"FRA\" },\n  { name: \"Gabon\", iso2: \"GA\", iso3: \"GAB\" },\n  { name: \"Gambia\", iso2: \"GM\", iso3: \"GMB\" },\n  { name: \"Georgia\", iso2: \"GE\", iso3: \"GEO\" },\n  { name: \"Germany\", iso2: \"DE\", iso3: \"DEU\" },\n  { name: \"Ghana\", iso2: \"GH\", iso3: \"GHA\" },\n  { name: \"Greece\", iso2: \"GR\", iso3: \"GRC\" },\n  { name: \"Grenada\", iso2: \"GD\", iso3: \"GRD\" },\n  { name: \"Guatemala\", iso2: \"GT\", iso3: \"GTM\" },\n  { name: \"Guinea\", iso2: \"GN\", iso3: \"GIN\" },\n  { name: \"Guinea-Bissau\", iso2: \"GW\", iso3: \"GNB\" },\n  { name: \"Guyana\", iso2: \"GY\", iso3: \"GUY\" },\n  { name: \"Haiti\", iso2: \"HT\", iso3: \"HTI\" },\n  { name: \"Holy See\" },\n  { name: \"Myanmar (Burma)\", iso2: \"MM\", iso3: \"MMR\" },\n  { name: \"Honduras\", iso2: \"HN\", iso3: \"HND\" },\n  { name: \"Hungary\", iso2: \"HU\", iso3: \"HUN\" },\n  { name: \"Iceland\", iso2: \"IS\", iso3: \"ISL\" },\n  { name: \"India\", iso2: \"IN\", iso3: \"IND\" },\n  { name: \"Indonesia\", iso2: \"ID\", iso3: \"IDN\" },\n  { name: \"Iran\", iso2: \"IR\", iso3: \"IRN\" },\n  { name: \"Iraq\", iso2: \"IQ\", iso3: \"IRQ\" },\n  { name: \"Ireland\", iso2: \"IE\", iso3: \"IRL\" },\n  { name: \"Israel\", iso2: \"IL\", iso3: \"ISR\" },\n  { name: \"Italy\", iso2: \"IT\", iso3: \"ITA\" },\n  { name: \"Jamaica\", iso2: \"JM\", iso3: \"JAM\" },\n  { name: \"Japan\", iso2: \"JP\", iso3: \"JPN\" },\n  { name: \"Jordan\", iso2: \"JO\", iso3: \"JOR\" },\n  { name: \"Kazakhstan\", iso2: \"KZ\", iso3: \"KAZ\" },\n  { name: \"Kenya\", iso2: \"KE\", iso3: \"KEN\" },\n  { name: \"Korea, South\", iso2: \"KR\", iso3: \"KOR\" },\n  { name: \"Kosovo\", iso2: \"XK\", iso3: \"XKX\" },\n  { name: \"Kuwait\", iso2: \"KW\", iso3: \"KWT\" },\n  { name: \"Kyrgyzstan\", iso2: \"KG\", iso3: \"KGZ\" },\n  { name: \"Laos\", iso2: \"LA\", iso3: \"LAO\" },\n  { name: \"Latvia\", iso2: \"LV\", iso3: \"LVA\" },\n  { name: \"Lebanon\", iso2: \"LB\", iso3: \"LBN\" },\n  { name: \"Liberia\", iso2: \"LR\", iso3: \"LBR\" },\n  { name: \"Libya\", iso2: \"LY\", iso3: \"LBY\" },\n  { name: \"Liechtenstein\", iso2: \"LI\", iso3: \"LIE\" },\n  { name: \"Lithuania\", iso2: \"LT\", iso3: \"LTU\" },\n  { name: \"Luxembourg\", iso2: \"LU\", iso3: \"LUX\" },\n  { name: \"MS Zaandam\" },\n  { name: \"Madagascar\", iso2: \"MG\", iso3: \"MDG\" },\n  { name: \"Malaysia\", iso2: \"MY\", iso3: \"MYS\" },\n  { name: \"Maldives\", iso2: \"MV\", iso3: \"MDV\" },\n  { name: \"Mali\", iso2: \"ML\", iso3: \"MLI\" },\n  { name: \"Malawi\", iso2: \"MW\", iso3: \"MWI\" },\n  { name: \"Malta\", iso2: \"MT\", iso3: \"MLT\" },\n  { name: \"Côte d'Ivoire\", iso2: \"CV\", iso3: \"CIV\" },\n  { name: \"Mauritania\", iso2: \"MR\", iso3: \"MRT\" },\n  { name: \"Mauritius\", iso2: \"MU\", iso3: \"MUS\" },\n  { name: \"Mexico\", iso2: \"MX\", iso3: \"MEX\" },\n  { name: \"Moldova\", iso2: \"MD\", iso3: \"MDA\" },\n  { name: \"Monaco\", iso2: \"MC\", iso3: \"MCO\" },\n  { name: \"Mongolia\", iso2: \"MN\", iso3: \"MNG\" },\n  { name: \"Montenegro\", iso2: \"ME\", iso3: \"MNE\" },\n  { name: \"Morocco\", iso2: \"MA\", iso3: \"MAR\" },\n  { name: \"Mozambique\", iso2: \"MZ\", iso3: \"MOZ\" },\n  { name: \"Namibia\", iso2: \"NA\", iso3: \"NAM\" },\n  { name: \"Nepal\", iso2: \"NP\", iso3: \"NPL\" },\n  { name: \"Netherlands\", iso2: \"NL\", iso3: \"NLD\" },\n  { name: \"New Zealand\", iso2: \"NZ\", iso3: \"NZL\" },\n  { name: \"Nicaragua\", iso2: \"NI\", iso3: \"NIC\" },\n  { name: \"Niger\", iso2: \"NE\", iso3: \"NER\" },\n  { name: \"Nigeria\", iso2: \"NG\", iso3: \"NGA\" },\n  { name: \"North Macedonia\" },\n  { name: \"Eswatini\", iso2:\"SWZ\", iso3:\"SWZ\" },\n  { name: \"Norway\", iso2: \"NO\", iso3: \"NOR\" },\n  { name: \"Oman\", iso2: \"OM\", iso3: \"OMN\" },\n  { name: \"Pakistan\", iso2: \"PK\", iso3: \"PAK\" },\n  { name: \"Panama\", iso2: \"PA\", iso3: \"PAN\" },\n  { name: \"Papua New Guinea\", iso2: \"PG\", iso3: \"PNG\" },\n  { name: \"Paraguay\", iso2: \"PY\", iso3: \"PRY\" },\n  { name: \"Peru\", iso2: \"PE\", iso3: \"PER\" },\n  { name: \"Philippines\", iso2: \"PH\", iso3: \"PHL\" },\n  { name: \"Poland\", iso2: \"PL\", iso3: \"POL\" },\n  { name: \"Portugal\", iso2: \"PT\", iso3: \"PRT\" },\n  { name: \"Qatar\", iso2: \"QA\", iso3: \"QAT\" },\n  { name: \"Romania\", iso2: \"RO\", iso3: \"ROU\" },\n  { name: \"Russia\", iso2: \"RU\", iso3: \"RUS\" },\n  { name: \"Rwanda\", iso2: \"RW\", iso3: \"RWA\" },\n  { name: \"Saint Kitts and Nevis\", iso2: \"KN\", iso3: \"KNA\" },\n  { name: \"Saint Lucia\", iso2: \"LC\", iso3: \"LCA\" },\n  { name: \"Saint Vincent and the Grenadines\", iso2: \"VC\", iso3: \"VCT\" },\n  { name: \"San Marino\", iso2: \"SM\", iso3: \"SMR\" },\n  { name: \"Saudi Arabia\", iso2: \"SA\", iso3: \"SAU\" },\n  { name: \"West Bank/Gaza\", iso2: \"WB\", iso3: \"WBG\" },\n  { name: \"Senegal\", iso2: \"SN\", iso3: \"SEN\" },\n  { name: \"Serbia\", iso2: \"RS\", iso3: \"SRB\" },\n  { name: \"Seychelles\", iso2: \"SC\", iso3: \"SYC\" },\n  { name: \"Republic of Congo\", iso2: \"CG\", iso3: \"COG\" },\n  { name: \"Sierra Leone\", iso2: \"SL\", iso3: \"SLE\" },\n  { name: \"Singapore\", iso2: \"SG\", iso3: \"SGP\" },\n  { name: \"Slovakia\", iso2: \"SK\", iso3: \"SVK\" },\n  { name: \"Slovenia\", iso2: \"SI\", iso3: \"SVN\" },\n  { name: \"Somalia\", iso2: \"SO\", iso3: \"SOM\" },\n  { name: \"Vatican\", iso2: \"VA\", iso3: \"VAT\" },\n  { name: \"Cape Verde\", iso2: \"CPV\", iso3: \"CPV\" },\n  { name: \"Port of Namibe\", iso2: \"MSZ\", iso3: \"MSZ\" },\n  { name: \"North Macedonia\", iso2: \"MKD\", iso3: \"MKD\" },\n  { name: \"Bali\", iso2: \"DPS\", iso3: \"DPS\" },\n  { name: \"South Africa\", iso2: \"ZA\", iso3: \"ZAF\" },\n  { name: \"Spain\", iso2: \"ES\", iso3: \"ESP\" },\n  { name: \"Sri Lanka\", iso2: \"LK\", iso3: \"LKA\" },\n  { name: \"Sudan\", iso2: \"SD\", iso3: \"SDN\" },\n  { name: \"Suriname\", iso2: \"SR\", iso3: \"SUR\" },\n  { name: \"Sweden\", iso2: \"SE\", iso3: \"SWE\" },\n  { name: \"Switzerland\", iso2: \"CH\", iso3: \"CHE\" },\n  { name: \"Syria\", iso2: \"SY\", iso3: \"SYR\" },\n  { name: \"Taiwan*\", iso2: \"TW\", iso3: \"TWN\" },\n  { name: \"Tanzania\", iso2: \"TZ\", iso3: \"TZA\" },\n  { name: \"Thailand\", iso2: \"TH\", iso3: \"THA\" },\n  { name: \"Timor-Leste\",iso2: \"TL\", iso3: \"TLS\" },\n  { name: \"Togo\", iso2: \"TG\", iso3: \"TGO\" },\n  { name: \"Trinidad and Tobago\", iso2: \"TT\", iso3: \"TTO\" },\n  { name: \"Tunisia\", iso2: \"TN\", iso3: \"TUN\" },\n  { name: \"Turkey\", iso2: \"TR\", iso3: \"TUR\" },\n  { name: \"US\", iso2: \"US\", iso3: \"USA\" },\n  { name: \"Uganda\", iso2: \"UG\", iso3: \"UGA\" },\n  { name: \"Ukraine\", iso2: \"UA\", iso3: \"UKR\" },\n  { name: \"United Arab Emirates\", iso2: \"AE\", iso3: \"ARE\" },\n  { name: \"United Kingdom\", iso2: \"GB\", iso3: \"GBR\" },\n  { name: \"Uruguay\", iso2: \"UY\", iso3: \"URY\" },\n  { name: \"Uzbekistan\", iso2: \"UZ\", iso3: \"UZB\" },\n  { name: \"Venezuela\", iso2: \"VE\", iso3: \"VEN\" },\n  { name: \"Vietnam\", iso2: \"VN\", iso3: \"VNM\" },\n  { name: \"West Bank and Gaza\" },\n  { name: \"Zambia\", iso2: \"ZM\", iso3: \"ZMB\" },\n  { name: \"Zimbabwe\", iso2: \"ZW\", iso3: \"ZWE\" }\n];\n\nlet isoDictionaryAll = {};\nfor (let i = 0; i < allCountries.length; i++) {\n  let temp = allCountries[i];\n  isoDictionaryAll[temp[\"iso3\"]] = temp[\"name\"];\n}\n\nconst countryData = [\n  countries,\n  countriesFull,\n  isoDictionary,\n  allCountries,\n  isoDictionaryAll\n];\n\nexport default countryData;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nconst NavBar = () => {\n  return (\n    <nav id=\"mainNav\">\n      <br></br>\n\n      <div>\n        <div class=\"btn-group\" role=\"group\" aria-label=\"Basic example\">\n          <Link to=\"/counter/\">\n            <button type=\"button\" class=\"btn btn-outline-dark\">\n              Counter\n            </button>\n          </Link>\n          <Link to=\"/piechart/\">\n            <button type=\"button\" class=\"btn btn-outline-dark\">\n              Pie Chart\n            </button>\n          </Link>\n          <Link to=\"/timegraph/\">\n            <button type=\"button\" class=\"btn btn-outline-dark\">\n              Time Graph\n            </button>\n          </Link>\n          <Link to=\"/mapchart/\">\n            <button type=\"button\" class=\"btn btn-outline-dark\">\n              Map\n            </button>\n          </Link>\n        </div>\n      </div>\n      <br></br>\n    </nav>\n  );\n};\n\nexport default NavBar;\n","import React from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faSpinner } from \"@fortawesome/free-solid-svg-icons\";\n\nconst Loading = () => (\n  <div className=\"spinner mx-auto text-center\">\n    <br />\n    <br />\n    <br />\n    <br />\n    <br />\n    <br />\n    <br />\n    <br />\n    <br />\n    <br />\n    <FontAwesomeIcon icon={faSpinner} spin size=\"4x\" />\n    <br />\n    <br />\n    <br />\n    <br />\n    <br />\n    <br />\n    <br />\n    <br />\n    <br />\n    <br />\n  </div>\n);\n\nexport default Loading;\n","import React, { Component } from \"react\";\nimport Plot from \"react-plotly.js\";\nimport axios from \"axios\";\nimport colormap from \"colormap\";\nimport countryData from \"./countries\";\nimport Loading from \"./Loading\";\n\nconst instance = axios.create({\n  baseURL: \"https://covid19.mathdro.id/api/confirmed\",\n});\nconst countries = countryData[1];\n\nclass PieChart extends Component {\n  state = {\n    selector: \"confirmed\",\n    data: null,\n    loading: true,\n  };\n\n  fetchCountriesDataSummary = async () => {\n    try {\n      let response = await instance.get(``);\n      let data = response.data;\n      this.setState({ data: data, loading: false });\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  componentDidMount = async () => {\n    this.fetchCountriesDataSummary();\n  };\n\n  getCountry = () => {\n    const countriesObj = this.state.data;\n    if (countriesObj) {\n      const result = countriesObj.filter((country) =>\n        countries.includes(country.countryRegion)\n      );\n      return result;\n    }\n  };\n\n  setUpChart = (countriesObj, selector) => {\n    let values = [];\n    let labels = [];\n    for (let key in countriesObj) {\n      values.push(countriesObj[key][selector]);\n      labels.push(countriesObj[key][\"countryRegion\"]);\n    }\n    return [values, labels];\n  };\n\n  handleOnClick = (selected) => {\n    this.setState({ selector: selected });\n  };\n\n  render() {\n    const plotData = this.setUpChart(this.getCountry(), this.state.selector);\n\n    const selectors = [\"confirmed\", \"deaths\", \"recovered\"];\n\n    const buttons = selectors.map((selector) => (\n      <button\n        className={\n          this.state.selector === selector\n            ? \"btn btn-outline-dark clicked\"\n            : \"btn btn-outline-dark\"\n        }\n        onClick={() => this.handleOnClick(selector)}\n      >\n        {selector}\n      </button>\n    ));\n\n    const data = [\n      {\n        values: plotData[0],\n        labels: plotData[1],\n        type: \"pie\",\n        textinfo: \"label\",\n        title: {\n          text:\n            this.state.selector === \"confirmed\"\n              ? \"Total Confirmed <br> \"\n              : this.state.selector === \"deaths\"\n              ? \"Total Deaths <br> \"\n              : \"Total Recoveries <br> \",\n          position: \"  center\",\n        },\n      },\n    ];\n    const colorway = colormap({\n      colormap: \"jet\",\n      nshades: countries.length,\n      format: \"hex\",\n      alpha: 1,\n    });\n    if (this.state.loading) {\n      return <Loading />;\n    }\n    return (\n      <div style={{ width: \"100%\", height: \"100%\" }}>\n        {buttons}\n        <Plot\n          data={data}\n          layout={{\n            modebar: {\n              bgcolor: \"rgba(255,255,255,0)\",\n            },\n            font: { color: \"#99aab5\", size: 14 },\n            showlegend: false,\n\n            colorway: colorway.reverse(),\n            plot_bgcolor: \"#161616\",\n            paper_bgcolor: \"#161616\",\n            autosize: true,\n          }}\n          config={{\n            modeBarButtonsToRemove: [\n              \"toggleSpikelines\",\n              \"zoomIn2d\",\n              \"zoomOut2d\",\n              \"autoScale2d\",\n              \"hoverClosestCartesian\",\n              \"hoverCompareCartesian\",\n              \"hoverClosestPie\",\n            ],\n            displaylogo: false,\n          }}\n          useResizeHandler={true}\n          style={{ width: \"100%\", height: \"100%\" }}\n        />{\" \"}\n      </div>\n    );\n  }\n}\n\nexport default PieChart;\n","import React, { Component } from \"react\";\nimport Plot from \"react-plotly.js\";\nimport axios from \"axios\";\nimport colormap from \"colormap\";\nimport countryData from \"./countries\";\nimport Loading from \"./Loading\";\n\nconst countries = countryData[0];\nconst countriesFull = countryData[1];\n\nconst instance = axios.create({\n  baseURL: \"https://covidapi.info/api/v1/\",\n});\n\nclass TimeGraph extends Component {\n  state = {\n    data: null,\n    selector: \"confirmed\",\n    logarithmic: false,\n    loading: true,\n  };\n\n  fetchCountriesData = async (countries) => {\n    try {\n      let dict = {};\n      for (let i = 0; i < countries.length; i++) {\n        let response = await instance.get(`country/${countries[i]}`);\n        let countryData = response.data.result;\n        dict[countries[i]] = countryData;\n      }\n      this.setState({ data: dict, loading: false });\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  capitalizeFirstLetter = (string) => {\n    return string.charAt(0).toUpperCase() + string.slice(1);\n  };\n\n  componentDidMount = async () => {\n    this.fetchCountriesData(countries);\n  };\n\n  getCountries = () => {\n    const countriesObj = this.state.data;\n    if (countriesObj) {\n      return countriesObj;\n    }\n  };\n\n  formatDate = (date) => {\n    if (date == 0) {\n      return 0;\n    }\n    const monthNames = [\n      \"Jan\",\n      \"Feb\",\n      \"Mar\",\n      \"Apr\",\n      \"May\",\n      \"Jun\",\n      \"Jul\",\n      \"Aug\",\n      \"Sep\",\n      \"Oct\",\n      \"Nov\",\n      \"Dec\",\n    ];\n\n    const mm = date.substring(5, 7);\n    const dd = date.substring(8, 11);\n    return monthNames[parseInt(mm) - 1] + \" \" + dd;\n  };\n\n  setupTicks = (arr, delta, date) => {\n    const l = arr.length;\n    delta = Math.floor(l / delta);\n    let newArr = [];\n    for (let i = 0; i < arr.length; i = i + delta) {\n      if (date) {\n        newArr.push(this.formatDate(arr[i]));\n      } else {\n        newArr.push(arr[i]);\n      }\n    }\n    return newArr;\n  };\n\n  handleOnClick = (selected) => {\n    this.setState({ selector: selected });\n  };\n  handleSwitch = () => {\n    this.setState({ logarithmic: !this.state.logarithmic });\n  };\n\n  render() {\n    const selectors = [\"confirmed\", \"deaths\", \"recovered\"];\n\n    const buttons = selectors.map((selector) => (\n      <button\n        className={\n          this.state.selector === selector\n            ? \"btn btn-outline-dark clicked\"\n            : \"btn btn-outline-dark\"\n        }\n        onClick={() => this.handleOnClick(selector)}\n      >\n        {selector}\n      </button>\n    ));\n\n    const data = this.getCountries();\n    let plotDataY = [[[]], [[]], [[]]],\n      plotDataX = [];\n    for (let iso in data) {\n      let countryObj = data[iso];\n      var confirmedArr = [],\n        deathsArr = [],\n        recoveredArr = [],\n        timeArr = [],\n        counter = 0,\n        dateArr = [];\n      for (let date in countryObj) {\n        var confirmed = countryObj[date].confirmed;\n        var deaths = countryObj[date].deaths;\n        var recovered = countryObj[date].recovered;\n        confirmedArr.push(confirmed);\n        deathsArr.push(deaths);\n        recoveredArr.push(recovered);\n        timeArr.push(counter);\n        dateArr.push(date);\n        counter++;\n      }\n      plotDataX.push(timeArr);\n      plotDataY[0].push(confirmedArr);\n      plotDataY[1].push(deathsArr);\n      plotDataY[2].push(recoveredArr);\n    }\n\n    let scatterData = [];\n    let select =\n      this.state.selector === \"confirmed\"\n        ? 0\n        : this.state.selector === \"deaths\"\n        ? 1\n        : this.state.selector === \"recovered\"\n        ? 2\n        : 3;\n\n    for (let i = 1; i < plotDataX.length + 1; i++) {\n      var trace = {\n        x: dateArr,\n        y: plotDataY[select][i],\n        type: \"scatter\",\n        name: countriesFull[i - 1],\n      };\n      scatterData.push(trace);\n    }\n\n    // console.log(\"test\");\n    // var tickvals = [0],\n    //   ticktxt = [0];\n    // if (plotDataX.length > 1 && dateArr.length > 1) {\n    //   tickvals = this.setupTicks(plotDataX[1], 25, false);\n    //   ticktxt = this.setupTicks(dateArr, 25, true);\n    // }\n\n    let logType = this.state.logarithmic ? \"log\" : \"null\";\n    const colorway = colormap({\n      colormap: \"jet\",\n      nshades: countries.length,\n      format: \"hex\",\n      alpha: 1,\n    });\n\n    if (this.state.loading) {\n      return <Loading />;\n    }\n    return (\n      <div style={{ width: \"100%\", height: \"100%\" }}>\n        {buttons}\n        <div class=\"custom-control custom-switch\">\n          <input\n            type=\"checkbox\"\n            class=\"custom-control-input\"\n            onClick={() => this.handleSwitch()}\n            id=\"switch\"\n          />\n          <br />\n\n          <label class=\"custom-control-label\" for=\"switch\">\n            Logarithmic\n          </label>\n        </div>\n        <div>\n          <Plot\n            data={scatterData}\n            layout={{\n              modebar: {\n                bgcolor: \"rgba(255,255,255,0)\",\n              },\n              title: `Total ${this.capitalizeFirstLetter(this.state.selector)}`,\n              font: { color: \"#99aab5\", size: 12 },\n              xaxis: {\n                title: \"Date\",\n                nticks: 15,\n              },\n              yaxis: { title: \"Number\", type: logType },\n              colorway: colorway,\n              plot_bgcolor: \"#161616\",\n              paper_bgcolor: \"#161616\",\n              autosize: true,\n              hovermode: \"closest\",\n              legend: {\n                bgcolor: \"#343434\",\n                bordercolor: \"#161616\",\n                borderwidth: 2,\n                font: { size: 10 },\n                x: 0,\n                y: 1,\n                autosize: true,\n              },\n            }}\n            config={{\n              modeBarButtonsToRemove: [\n                \"toggleSpikelines\",\n                \"zoomIn2d\",\n                \"zoomOut2d\",\n                \"autoScale2d\",\n                \"hoverClosestCartesian\",\n                \"hoverCompareCartesian\",\n              ],\n              displaylogo: false,\n            }}\n            useResizeHandler={true}\n            style={{ width: \"100%\", height: \"100%\" }}\n            modeBarButtonsToRemove={[\"toImage\"]}\n          />\n        </div>\n        <br /> <br /> <br /> <br />\n      </div>\n    );\n  }\n}\n\nexport default TimeGraph;\n","import React, { Component } from \"react\";\nimport countryData from \"./countries\";\nimport axios from \"axios\";\nimport Tab from \"react-bootstrap/Tab\";\nimport Tabs from \"react-bootstrap/Tabs\";\nimport Loading from \"./Loading\";\nimport { connect } from \"react-redux\";\nimport { setData } from \"./redux/actions\";\n\nconst MENA = countryData[1];\nconst allCountries = countryData[3];\nconst dictionary = countryData[4];\n\nconst instance1 = axios.create({\n  baseURL: \"https://covid19.mathdro.id/api/\",\n  loading: true,\n});\n\nconst instance2 = axios.create({\n  baseURL: \"https://covidapi.info/api/v1/global/latest\",\n  loading: true,\n});\n\nclass Counter extends Component {\n  state = {\n    data: null,\n    dataCountries: null,\n    loading: true,\n    region: true,\n  };\n\n  changeRegion = () => {\n    this.setState({ region: !this.state.region });\n  };\n\n  fetchData = async () => {\n    try {\n      let response1 = await instance1.get(``);\n      let data1 = response1.data;\n      let response2 = await instance2.get(``);\n      let data2 = response2.data;\n      this.setState({ data: data1, dataCountries: data2, loading: false });\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  componentDidMount = async () => {\n    this.fetchData();\n  };\n\n  componentDidUpdate() {\n    this.props.setData(this.state.dataCountries);\n  }\n\n  sortCountriesConfirmed = (items) => {\n    let cleaned = items.map((country) => {\n      let countryName = Object.keys(country)[0];\n      return {\n        name: dictionary[countryName],\n        confirmed: country[countryName].confirmed,\n      };\n    });\n    const confirmed = cleaned.sort((a, b) => b.confirmed - a.confirmed);\n\n    return [confirmed];\n  };\n\n  sortCountriesRecovered = (items) => {\n    let cleaned = items.map((country) => {\n      let countryName = Object.keys(country)[0];\n      return {\n        name: dictionary[countryName],\n        recovered: country[countryName].recovered,\n      };\n    });\n\n    const recovered = cleaned.sort((a, b) => b.recovered - a.recovered);\n    return [recovered];\n  };\n\n  sortCountriesDeaths = (items) => {\n    let cleaned = items.map((country) => {\n      let countryName = Object.keys(country)[0];\n      return {\n        name: dictionary[countryName],\n        deaths: country[countryName].deaths,\n      };\n    });\n\n    const deaths = cleaned.sort((a, b) => b.deaths - a.deaths);\n    return [deaths];\n  };\n\n  render() {\n    let confirmedRows = <></>;\n    let deadRows = <></>;\n    let recoveredRows = <></>;\n    let confirmedRowsMENA = <></>;\n    let deadRowsMENA = <></>;\n    let recoveredRowsMENA = <></>;\n\n    if (!this.state.loading) {\n      const sortedDataConfirmed = this.sortCountriesConfirmed(\n        this.state.dataCountries.result\n      );\n      const sortedDataDeaths = this.sortCountriesDeaths(\n        this.state.dataCountries.result\n      );\n      const sortedDataRecovered = this.sortCountriesRecovered(\n        this.state.dataCountries.result\n      );\n      const confirmedData = sortedDataConfirmed[0];\n      const deathsData = sortedDataDeaths[0];\n      const recoveredData = sortedDataRecovered[0];\n\n      confirmedRows = confirmedData.map((country) => (\n        <tr>\n          <td>\n            &nbsp;&nbsp;&nbsp;\n            <font style={{ color: \"red\", fontSize: \"17px\" }}>\n              {country.confirmed}\n            </font>\n            <font style={{ fontSize: \"15px\" }}>\n              &nbsp;&nbsp;\n              {country.name}\n            </font>\n          </td>\n        </tr>\n      ));\n      deadRows = deathsData.map((country) => (\n        <tr>\n          <td>\n            &nbsp;&nbsp;&nbsp;\n            <font style={{ color: \"red\", fontSize: \"17px\" }}>\n              {country.deaths}\n            </font>\n            <font style={{ fontSize: \"15px\" }}>\n              &nbsp;&nbsp;\n              {country.name}\n            </font>\n          </td>\n        </tr>\n      ));\n      recoveredRows = recoveredData.map((country) => (\n        <tr>\n          <td>\n            &nbsp;&nbsp;&nbsp;\n            <font style={{ color: \"red\", fontSize: \"17px\" }}>\n              {country.recovered}\n            </font>\n            <font style={{ fontSize: \"15px\" }}>\n              &nbsp;&nbsp;\n              {country.name}\n            </font>\n          </td>\n        </tr>\n      ));\n      var menaConfirmed = 0,\n        menaDeaths = 0,\n        menaRecovered = 0;\n\n      confirmedRowsMENA = confirmedData.map((country) => {\n        if (MENA.indexOf(country.name) !== -1) {\n          menaConfirmed += country.confirmed;\n          return (\n            <tr>\n              <td>\n                &nbsp;&nbsp;&nbsp;\n                <font\n                  style={{\n                    color: \"red\",\n                    fontSize: \"17px\",\n                  }}\n                >\n                  {country.confirmed}\n                </font>\n                <font style={{ fontSize: \"15px\" }}>\n                  &nbsp;&nbsp;\n                  {country.name}\n                </font>\n              </td>\n            </tr>\n          );\n        }\n      });\n      deadRowsMENA = deathsData.map((country) => {\n        if (MENA.indexOf(country.name) !== -1) {\n          menaDeaths += country.deaths;\n          return (\n            <tr>\n              <td>\n                &nbsp;&nbsp;&nbsp;\n                <font\n                  style={{\n                    color: \"red\",\n                    fontSize: \"17px\",\n                  }}\n                >\n                  {country.deaths}\n                </font>\n                <font style={{ fontSize: \"15px\" }}>\n                  &nbsp;&nbsp;\n                  {country.name}\n                </font>\n              </td>\n            </tr>\n          );\n        }\n      });\n      recoveredRowsMENA = recoveredData.map((country) => {\n        if (MENA.indexOf(country.name) !== -1) {\n          menaRecovered += country.recovered;\n          return (\n            <tr>\n              <td>\n                &nbsp;&nbsp;&nbsp;\n                <font\n                  style={{\n                    color: \"red\",\n                    fontSize: \"17px\",\n                  }}\n                >\n                  {country.recovered}\n                </font>\n                <font style={{ fontSize: \"15px\" }}>\n                  &nbsp;&nbsp;\n                  {country.name}\n                </font>\n              </td>\n            </tr>\n          );\n        }\n      });\n    }\n    if (this.state.loading) {\n      return <Loading />;\n    }\n    return (\n      <div className=\"counter-div\">\n        {\" \"}\n        <div class=\"custom-control custom-switch\">\n          <input\n            type=\"checkbox\"\n            class=\"custom-control-input\"\n            onClick={() => this.changeRegion()}\n            id=\"regionswitch\"\n          />\n          <label class=\"custom-control-label\" for=\"regionswitch\">\n            {this.state.region ? \"Show Global Data\" : \"Show Arab World\"}\n          </label>\n        </div>{\" \"}\n        <br />\n        <div className=\"container counter-nav\">\n          <Tabs defaultActiveKey=\"confirmed\" id=\"counter\">\n            <Tab eventKey=\"confirmed\" title=\"Confirmed\">\n              <div className=\"card mx-auto counter\">\n                <h1 className=\"display-3\" style={{ color: \"red\" }}>\n                  {this.state.loading\n                    ? \"\"\n                    : this.state.region\n                    ? menaConfirmed\n                    : this.state.data.confirmed.value}\n                </h1>\n              </div>\n              <div className=\"card mx-auto counter list my-custom-scrollbar\">\n                <table class=\"table-dark \">\n                  <tbody>\n                    {this.state.loading\n                      ? \"\"\n                      : this.state.region\n                      ? confirmedRowsMENA\n                      : confirmedRows}\n                  </tbody>\n                </table>\n              </div>\n              <br></br>\n            </Tab>\n            <Tab eventKey=\"deaths\" title=\"Deaths\">\n              <div className=\"card mx-auto counter\">\n                <h1 className=\"display-3\" style={{ color: \"red\" }}>\n                  {this.state.loading\n                    ? \"\"\n                    : this.state.region\n                    ? menaDeaths\n                    : this.state.data.deaths.value}\n                </h1>\n              </div>\n              <div className=\"card mx-auto counter list my-custom-scrollbar\">\n                <table class=\"table-dark \">\n                  <tbody>\n                    {\" \"}\n                    {this.state.loading\n                      ? \"\"\n                      : this.state.region\n                      ? deadRowsMENA\n                      : deadRows}\n                  </tbody>\n                </table>\n              </div>\n              <br></br>\n            </Tab>\n            <Tab eventKey=\"recovered\" title=\"Recovered\">\n              <div className=\"card mx-auto counter\">\n                <h1 className=\"display-3\" style={{ color: \"red\" }}>\n                  {this.state.loading\n                    ? \"\"\n                    : this.state.region\n                    ? menaRecovered\n                    : this.state.data.recovered.value}\n                </h1>\n              </div>\n              <div className=\"card mx-auto counter list my-custom-scrollbar\">\n                <table class=\"table-dark \">\n                  <tbody>\n                    {\" \"}\n                    {this.state.loading\n                      ? \"\"\n                      : this.state.region\n                      ? recoveredRowsMENA\n                      : recoveredRows}\n                  </tbody>\n                </table>\n              </div>\n              <br></br>\n            </Tab>\n          </Tabs>\n          <br /> <br /> <br /> <br />\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    setData: (data) => dispatch(setData(data)),\n  };\n};\n\nexport default connect(null, mapDispatchToProps)(Counter);\n","import { SET_COUNTRY, SET_DATA, LOADING } from \"./actionTypes\";\nimport axios from \"axios\";\n\nconst instance = axios.create({\n  baseURL: \"https://covid19.mathdro.id/api/countries/\",\n});\n\nexport const fetchCountryData = (country) => async (dispatch) => {\n  try {\n    const res = await instance.get(`${country}`);\n    const countryData = res.data;\n    dispatch({ type: SET_COUNTRY, payload: countryData });\n  } catch (err) {\n    console.error(err);\n  }\n};\n\nexport const setData = (data) => {\n  return { type: SET_DATA, payload: data };\n};\n\nexport const loading = (condition) => {\n  return { type: LOADING, payload: condition };\n};\n","export const SET_COUNTRY_DATA = \"SET_COUNTRY_DATA\";\nexport const SET_COUNTRY = \"SET_COUNTRY\";\nexport const SET_DATA = \"SET_DATA\";\nexport const LOADING = \"LOADING\";\n","import React, { useState, useEffect } from \"react\";\nimport Loading from \"./Loading\";\nimport axios from \"axios\";\nimport Plot from \"react-plotly.js\";\nimport countryData from \"./countries\";\n\nconst dictionary = countryData[4];\n\nconst instance = axios.create({\n  baseURL: \"https://covidapi.info/api/v1/\",\n});\n\nconst CountryInfo = ({ country }) => {\n  const [data, setData] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [X, setX] = useState([]);\n  const [Y1, setY1] = useState([]);\n  const [Y2, setY2] = useState([]);\n  const [Y3, setY3] = useState([]);\n  const [Y4, setY4] = useState([]);\n  const [logarithmic, setLogarithmic] = useState(false);\n\n  const handleSwitch = () => {\n    setLogarithmic(!logarithmic);\n  };\n\n  const fetchData = async (country) => {\n    try {\n      let response = await instance.get(`country/${country}`);\n      let countryData = response.data.result;\n      if (loading) {\n        setData(countryData);\n      }\n    } catch (error) {\n      console.error(error);\n    }\n  };\n  useEffect(() => {\n    fetchData(country);\n  });\n\n  let logType = logarithmic ? \"log\" : \"null\";\n\n  if (data && loading) {\n    var Xtemp = [];\n    var Y1temp = [],\n      Y2temp = [],\n      Y3temp = [],\n      Y4temp = [];\n    for (var key in data) {\n      Xtemp.push(key);\n      Y1temp.push(data[key].confirmed);\n      Y2temp.push(data[key].deaths);\n      Y3temp.push(data[key].recovered);\n    }\n    if (Xtemp.length > 1) {\n      setX(Xtemp);\n      setY1(Y1temp);\n      setY2(Y2temp);\n      setY3(Y3temp);\n      for (let i = 0; i < Xtemp.length; i++) {\n        Y4temp.push(Y1temp[i + 1] - Y1temp[i]);\n      }\n      setY4(Y4temp);\n      setLoading(false);\n    }\n  }\n\n  if (!loading) {\n    const trace1 = {\n      x: X,\n      y: Y1,\n      type: \"scatter\",\n      name: \"Confirmed\",\n    };\n    const trace2 = {\n      x: X,\n      y: Y2,\n      type: \"scatter\",\n      name: \"Deaths\",\n    };\n    const trace3 = {\n      x: X,\n      y: Y3,\n      type: \"scatter\",\n      name: \"Recovered\",\n    };\n    const bar = {\n      x: X,\n      y: Y4,\n      type: \"bar\",\n      name: \"New Cases\",\n    };\n    const plotData = [trace1, trace2, trace3, bar];\n\n    return (\n      <div>\n        <div class=\"custom-control custom-switch\">\n          <input\n            type=\"checkbox\"\n            class=\"custom-control-input\"\n            onClick={() => handleSwitch()}\n            id=\"logswitchmap\"\n          />\n\n          <label class=\"custom-control-label\" for=\"logswitchmap\">\n            Logarithmic\n          </label>\n        </div>\n        <Plot\n          data={plotData}\n          layout={{\n            modebar: {\n              bgcolor: \"rgba(255,255,255,0)\",\n            },\n            title: `${dictionary[country]}`,\n            font: { color: \"#99aab5\", size: 12 },\n            xaxis: {\n              title: \"Date\",\n              nticks: 15,\n            },\n            yaxis: { title: \"Number\", type: logType },\n\n            plot_bgcolor: \"#161616\",\n            paper_bgcolor: \"#161616\",\n            autosize: true,\n          }}\n          useResizeHandler={true}\n          style={{ width: \"100%\", height: \"100%\" }}\n          config={{\n            modeBarButtonsToRemove: [\n              \"toggleSpikelines\",\n              \"zoomIn2d\",\n              \"zoomOut2d\",\n              \"autoScale2d\",\n              \"hoverClosestCartesian\",\n              \"hoverCompareCartesian\",\n              \"select2d\",\n              \"lasso2d\",\n            ],\n            displaylogo: false,\n          }}\n        />\n      </div>\n    );\n  } else {\n    return (\n      <div>\n        <Loading />\n      </div>\n    );\n  }\n};\n\nexport default CountryInfo;\n","import React, { useState } from \"react\";\nimport Plot from \"react-plotly.js\";\nimport { connect } from \"react-redux\";\nimport { Modal, Button } from \"react-bootstrap\";\nimport { Redirect } from \"react-router-dom\";\nimport countryData from \"./countries\";\nimport CountryInfo from \"./CountryInfo\";\n\nconst dictionary = countryData[4];\n\nconst MapChart = ({ covidData }) => {\n  const [show, setShow] = useState(false);\n  const [country, setCountry] = useState(null);\n\n  const handleClose = () => setShow(false);\n  const handleShow = (countryData) => {\n    let country = fetchCountry(countryData);\n    if (country) {\n      setCountry(country);\n      setShow(true);\n    }\n  };\n\n  const fetchCountry = (pointData) => {\n    const data = pointData.points[0];\n    const index = data.pointIndex;\n    const location = pointData.points[0].data.locations[index];\n    return location;\n  };\n\n  var data = [];\n  if (covidData.data) {\n    let countryNames = [];\n    let confirmedList = [];\n    covidData.data.result.map((country) => {\n      let countryName = Object.keys(country)[0];\n      countryNames.push(countryName);\n      confirmedList.push(country[countryName].confirmed);\n    });\n    let scaledData = confirmedList.map((num) => Math.pow(num, 0.3));\n    data = [\n      {\n        type: \"scattergeo\",\n        mode: \"markers\",\n        locations: countryNames,\n        hoverinfo: \"text, label\",\n        text: confirmedList,\n        marker: {\n          size: scaledData,\n          color: \"rgba(255,0,0,0.75)\",\n          sizeref: 1,\n          line: {\n            color: \"black\",\n          },\n        },\n        name: \"europe data\",\n      },\n    ];\n  }\n  if (!covidData.data) {\n    return <Redirect to=\"/\" />;\n  }\n  return (\n    <div style={{ width: \"100%\", height: \"100%\" }}>\n      <div style={{ width: \"100%\", height: \"100%\" }}>\n        <Modal\n          size=\"lg\"\n          aria-labelledby=\"contained-modal-title-vcenter\"\n          centered\n          show={show}\n          onHide={handleClose}\n        >\n          <Modal.Header closeButton>\n            {/* <Modal.Title id=\"contained-modal-title-vcenter w-100\">\n              {dictionary[country]}\n            </Modal.Title> */}\n          </Modal.Header>\n          <Modal.Body>\n            <CountryInfo country={country} />\n          </Modal.Body>\n          {/* <Modal.Footer>\n            <Button variant=\"secondary\" onClick={handleClose}>\n              Close\n            </Button>\n            <Button variant=\"primary\" onClick={handleClose}>\n              Save Changes\n            </Button>\n          </Modal.Footer> */}\n        </Modal>\n      </div>\n\n      <Plot\n        data={data}\n        layout={{\n          modebar: {\n            bgcolor: \"rgba(255,255,255,0)\",\n          },\n          geo: {\n            scope: \"World\",\n            resolution: \"200\",\n            showland: true,\n            landcolor: \"#161616\",\n            showframe: false,\n            bgcolor: \"#161616\",\n            showcountries: true,\n            showocean: true,\n            // projection: {\n            //   type: \"mercator\",\n            // },\n            // lonaxis: {\n            //   range: [-160, 65],\n            // },\n            // lataxis: {\n            //   range: [-40, 90],\n            // },\n\n            oceancolor: \"#030217\",\n          },\n\n          plot_bgcolor: \"rgba(0,0,0,0)\",\n          paper_bgcolor: \"rgba(0,0,0,0)\",\n          autosize: true,\n        }}\n        useResizeHandler={true}\n        style={{ width: \"100%\", height: \"100%\" }}\n        onClick={(data) => handleShow(data)}\n        config={{\n          modeBarButtonsToRemove: [\n            \"toggleSpikelines\",\n            \"autoScale2d\",\n            \"hoverClosestCartesian\",\n            \"hoverCompareCartesian\",\n            \"select2d\",\n            \"lasso2d\",\n            \"hoverClosestGeo\",\n            \"zoomInGeo\",\n            \"zoomOutGeo\",\n          ],\n          displaylogo: false,\n        }}\n      />\n    </div>\n  );\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    covidData: state.data,\n  };\n};\n\nexport default connect(mapStateToProps)(MapChart);\n","import React from \"react\";\nimport { Switch, Route, Link } from \"react-router-dom\";\n\nimport NavBar from \"./NavBar\";\nimport PieChart from \"./PieChart\";\nimport TimeGraph from \"./TimeGraph\";\nimport Counter from \"./Counter\";\nimport MapChart from \"./MapChart\";\nimport Footer from \"./Footer\";\n\nimport \"./App.css\";\nimport \"./index.css\";\n\nconst App = () => (\n  <div className=\"App\">\n    <NavBar />\n    <Switch>\n      <Route path=\"/mapchart\" component={MapChart} />\n      <Route path=\"/piechart\" component={PieChart} />\n      <Route path=\"/timegraph\" component={TimeGraph} />\n      <Route path=\"/\" component={Counter} />\n    </Switch>\n\n    {/* <Footer /> */}\n  </div>\n);\n\nexport default App;\n","import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\n\nconst instance = axios.create({\n  baseURL: \"https://covidapi.info/api/v1/\",\n  loading: true,\n});\n\nconst Footer = () => {\n  const [date, setDate] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const fetchDate = async () => {\n    try {\n      let response = await instance.get(`global`);\n      let fetchedData = response.data;\n      if (loading) {\n        setDate(fetchedData.date);\n        setLoading(false);\n      }\n    } catch (error) {\n      console.error(error);\n    }\n  };\n  useEffect(() => {\n    fetchDate();\n  });\n\n  return (\n    <footer className=\"sticky-footer\">\n      <div className=\"container\">\n        <div className=\"text-center\">\n          <small>\n            Copyright © <a href=\"https://github.com/moe9195\">Mohammad Rahmeh</a>{\" \"}\n            2020<br></br> Data Obtained From{\" \"}\n            <a href=\"https://github.com/backtrackbaba/covid-api\">\n              CovidAPI.info\n            </a>{\" \"}\n            <br></br>Last Updated: {loading ? \"\" : `${date}`}\n            <br></br>\n          </small>\n        </div>\n      </div>\n    </footer>\n  );\n};\n\nexport default Footer;\n","import { SET_DATA, LOADING } from \"../actions/actionTypes\";\n\nconst initialState = { countryData: null, loading: true };\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case SET_DATA:\n      return {\n        ...state,\n        data: action.payload,\n      };\n    case LOADING:\n      return {\n        ...state,\n        loading: action.payload,\n      };\n    default:\n      return state;\n  }\n};\n\nexport default reducer;\n","import { combineReducers } from \"redux\";\nimport reducer from \"./data\";\n\nconst rootReducer = combineReducers({\n  data: reducer,\n});\n\nexport default rootReducer;\n","import { createStore, compose, applyMiddleware } from \"redux\";\nimport thunk from \"redux-thunk\";\n\n// Data actions\n\nimport rootReducer from \"./reducers\";\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nconst store = createStore(\n  rootReducer,\n  composeEnhancers(applyMiddleware(thunk))\n);\n\nexport default store;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://goo.gl/SC7cgQ\"\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log(\"New content is available; please refresh.\");\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get(\"content-type\").indexOf(\"javascript\") === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { HashRouter } from \"react-router-dom\";\n\nimport { Provider } from \"react-redux\";\nimport App from \"./App\";\nimport store from \"./redux\";\nimport registerServiceWorker from \"./registerServiceWorker\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <HashRouter>\n      <App />\n    </HashRouter>\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\nregisterServiceWorker();\n"],"sourceRoot":""}